{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ObservableData.js","webpack:///webpack/bootstrap 5ac20af838a1d216ca79","webpack:///./../common-micro-libs/src/jsutils/EventEmitter.js","webpack:///./../common-micro-libs/src/jsutils/dataStore.js","webpack:///./../common-micro-libs/src/jsutils/nextTick.js","webpack:///./src/common.js","webpack:///./../common-micro-libs/src/jsutils/Compose.js","webpack:///./../common-micro-libs/src/jsutils/objectExtend.js","webpack:///./../common-micro-libs/src/jsutils/runtime-aliases.js","webpack:///./src/index.js","webpack:///./src/ObservableArray.js","webpack:///./../common-micro-libs/src/jsutils/queueCallback.js","webpack:///./../common-micro-libs/src/jsutils/Set.js","webpack:///./../common-micro-libs/src/jsutils/getGlobal.js","webpack:///(webpack)/buildin/global.js","webpack:///./../common-micro-libs/src/jsutils/Iterator.js","webpack:///./src/ObservableObject.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__Set__","getSetup","PRIVATE","has","set","listeners","pipes","__WEBPACK_IMPORTED_MODULE_2__es6_Set__","all","onDestroy","bind","getEventNameList","eventNamesStr","split","__WEBPACK_IMPORTED_MODULE_0__Compose__","__WEBPACK_IMPORTED_MODULE_1__dataStore__","create","arraySlice","Function","Array","slice","isFunction","fn","objectKeys","keys","EventEmitter","extend","on","evName","callback","_this","_getSetup$call","events","reduce","eventList","eventName","off","add","delete","response","forEach","_getSetup$call2","once","_this2","eventListeners","eventNameListener","emit","console","log","setup","eventPipes","eventAll","args","arguments","isCanceled","callbackHandler","apply","size","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","push","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","pipe","pipeTo","prefix","includeInstance","_this3","pipeEvToReceiver","triggeredEvName","unshift","hasListeners","_getSetup$call3","some","destroy","mixin","target","method","WeakMap","counter","Date","now","Math","random","key","entry","writable","window","dataStore","stash","reIsNativeCode","nextTick","processPending","setTimeout","immediates","shift","length","processing","setImediate","test","toString","Promise","resolved","resolve","then","catch","e","setDependencyTracker","dependeeNotifier","dependeeList","unsetDependencyTracker","stopDependeeNotifications","emitInternalEvent","EV_STOP_DEPENDEE_NOTIFICATION","storeDependeeNotifiers","store","dependeeCallback","OBJECT_PROTOTYPE","IS_COMPUTED_NOTIFIER","bindCallTo","onInternalEvent","isArray","arrayForEach","isPureObject","isObservable","setObservableFlag","queueDependeeNotifier","__WEBPACK_IMPORTED_MODULE_0_common_micro_libs_src_jsutils_EventEmitter__","__WEBPACK_IMPORTED_MODULE_1_common_micro_libs_src_jsutils_nextTick__","__WEBPACK_IMPORTED_MODULE_2_common_micro_libs_src_jsutils_dataStore__","__WEBPACK_IMPORTED_MODULE_3_common_micro_libs_src_jsutils_es6_Set__","NOOP","INTERNAL_EVENTS","ARRAY_PROTOTYPE","indexOf","splice","obj","dependeeNotifiers","execNotifiers","notifierCb","clear","callNextTick","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","constructor","setPrototypeOf","__proto__","k","getDestroyCallback","instanceState","stateStore","prop","COMMON_DESTROY_METHOD_NAME","Node","getInstanceState","inst","callOnDestroyCallback","__WEBPACK_IMPORTED_MODULE_0__objectExtend__","__WEBPACK_IMPORTED_MODULE_2__queueCallback__","baseMethods","isDestroyed","init","executeCallbacksNow","destroyCallbacks","getFactory","staticMethods","Class","getPrototypeOf","_ref","_len","_key","newProto","thisObjProto","objKey","isInstanceOf","instanceObj","protoKey","concat","Compose","ComposeConstructor","_len2","_key2","objectExtend","mergeIntoObj","mergeObjects","total","deepMerge","_toString","OBJECT_TYPE","objectDefineProperty","objectDefineProperties","arrayIndexOf","functionBind","functionBindCall","defineProperties","arr","_toConsumableArray","arr2","from","observeAll","data","__WEBPACK_IMPORTED_MODULE_2__common__","dataItem","__WEBPACK_IMPORTED_MODULE_1__ObservableObject__","propValue","__WEBPACK_IMPORTED_MODULE_0__ObservableArray__","getInstance","obArray","__WEBPACK_IMPORTED_MODULE_3__common__","dependees","__WEBPACK_IMPORTED_MODULE_2_common_micro_libs_src_jsutils_es6_Set__","isQueued","nextEvent","storeEventData","getNewEventObject","_nextEvent$eventName","notify","cb","eventData","ev1","makeArrayObservable","arrCurrentProto","newArrProto","getOwnPropertyNames","ArrayPrototype","origMethod","doEvents","changeMethods","canAdd","addMethods","canRemove","removeMethods","isArraySplice","objectDefineProp","added","removed","notifyDependees","arrObj","ObservableArray","updated","item","index","_array","updateResponse","arrayInstance","observable","thisPrototype","observableProto","queueCallback","callbacks","queue","flushQueue","cbList","__WEBPACK_IMPORTED_MODULE_0__es6_Set__","FakeSet","Set","__WEBPACK_IMPORTED_MODULE_0__getGlobal__","__WEBPACK_IMPORTED_MODULE_1__Iterator__","__WEBPACK_IMPORTED_MODULE_2__runtime_aliases__","_","values","idx","entries","global","getGlobal","GLOBAL","g","_typeof","eval","FakeIterator","__WEBPACK_IMPORTED_MODULE_0__runtime_aliases__","$iterator$","nextIdx","observableObj","__WEBPACK_IMPORTED_MODULE_5__common__","instData","__WEBPACK_IMPORTED_MODULE_2_common_micro_libs_src_jsutils_EventEmitter__","watched","opt","__WEBPACK_IMPORTED_MODULE_1_common_micro_libs_src_jsutils_objectExtend__","ObservableObject","defaults","__WEBPACK_IMPORTED_MODULE_3_common_micro_libs_src_jsutils_nextTick__","propName","makePropWatchable","valueGetter","valueSetter","currentValue","emitNotification","propDescriptor","getOwnPropertyDescriptor","propSetup","PropertySetup","oldVal","newVal","storeDependees","newValue","isComputed","oldValue","deep","makeObservable","Error","createComputedProp","valueGenerator","runValueGenerator","dependencyChangeNotifier","observableAssign","objs","onEach","watchProp","notifier","objectHasOwnProperty","noopEventListener","watchPropOnce","unwatchProp","notifyPropWatchers","observableMixin","__WEBPACK_IMPORTED_MODULE_0_common_micro_libs_src_jsutils_Compose__","__WEBPACK_IMPORTED_MODULE_4_common_micro_libs_src_jsutils_es6_Set__","OBJECT","objectCreate","model","options","watchAll","assign","setProp","_obj","rmDepEvListener","queued","noDelay","_emit","removeDependee","createComputed"],"mappings":"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","file":"ObservableData.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ObservableData\"] = factory();\n\telse\n\t\troot[\"ObservableData\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ObservableData\"] = factory();\n\telse\n\t\troot[\"ObservableData\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Set__ = __webpack_require__(11);\n/* unused harmony reexport Set */\n/* unused harmony reexport FakeSet */\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__Set__[\"a\"]; });\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export EventEmitter */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Compose__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dataStore__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__es6_Set__ = __webpack_require__(0);\n\n\n\n\n//----------------------------------------------------------------\nvar PRIVATE = __WEBPACK_IMPORTED_MODULE_1__dataStore__[\"a\" /* default */].create();\nvar arraySlice = Function.call.bind(Array.prototype.slice);\nvar isFunction = function isFunction(fn) {\n    return typeof fn === \"function\";\n};\nvar objectKeys = Object.keys;\n\n/**\r\n * Emits events. Use it to extend other modules and thus add events to them.\r\n *\r\n * @class EventEmitter\r\n * @extends Compose\r\n */\nvar EventEmitter = __WEBPACK_IMPORTED_MODULE_0__Compose__[\"a\" /* default */].extend( /** @lends EventEmitter.prototype */{\n    /**\r\n     * Add a callback to a given event name\r\n     *\r\n     * @param {String} evName\r\n     *  The event name to be listened to or a list of event sperated by a space.\r\n     *  The EventEmitter instance can be used as the `evName` as well which will\r\n     *  essentially listen to all events.\r\n     *  Note that this special event however, will change the arguments\r\n     *  passed to the callback by pre-pending the Event Name (`String`) and\r\n     *  appending the Component instance.\r\n     *\r\n     * @param {Function} callback\r\n     *  A callback function to listen to the event. The callback function\r\n     *  can cancel any queued event callbacks by returning `true` (boolean).\r\n     *\r\n     * @return {EventEmitter#EventListener}\r\n     *\r\n     * @example\r\n     *\r\n     * events.on(\"some-event\", (...args) => {});\r\n     *\r\n     * // List to all events\r\n     * events.on(events, (evNameTriggered, ...args) => {}\r\n     */\n    on: function on(evName, callback) {\n        var _this = this;\n\n        var _getSetup$call = getSetup.call(this),\n            all = _getSetup$call.all,\n            listeners = _getSetup$call.listeners;\n\n        var events = getEventNameList(evName).reduce(function (eventList, eventName) {\n            var off = void 0;\n\n            // If eventName is `this` then listen to all events\n            if (eventName === _this) {\n                all.add(callback);\n                off = function off() {\n                    return all.delete(callback);\n                };\n            } else {\n                if (!(eventName in listeners)) {\n                    listeners[eventName] = new __WEBPACK_IMPORTED_MODULE_2__es6_Set__[\"a\" /* default */]();\n                }\n\n                listeners[eventName].add(callback);\n                off = function off() {\n                    return listeners[eventName].delete(callback);\n                };\n            }\n\n            eventList[eventName] = { off: off };\n            return eventList;\n        }, {});\n        /**\r\n         * EventEmitter Listener object, returned when one of the listener setter methods\r\n         * (ex. `on()`, `once()`, `pipe`) are used.\r\n         *\r\n         * @typedef {Object} EventEmitter~EventListener\r\n         *\r\n         * @property {Object} listeners\r\n         *  An object with the individual listeners. Each respective event listener\r\n         *  has an `off()` method to turn that listener off.\r\n         *\r\n         * @property {Function} off\r\n         *  Remove callback from event.\r\n         */\n        var response = {\n            off: function off() {\n                objectKeys(events).forEach(function (eventName) {\n                    return events[eventName].off();\n                });\n            }\n        };\n\n        response.listeners = events;\n        return response;\n    },\n\n    /**\r\n     * Remove a callback from a given event\r\n     *\r\n     * @param {String} evName\r\n     * @param {Function} callback\r\n     *\r\n     */\n    off: function off(evName, callback) {\n        var _getSetup$call2 = getSetup.call(this),\n            all = _getSetup$call2.all,\n            listeners = _getSetup$call2.listeners;\n\n        if (evName === this) {\n            all.delete(callback);\n            return;\n        }\n\n        if (listeners[evName]) {\n            listeners.delete(callback);\n        }\n    },\n\n    /**\r\n     * Add a callback to a given event name that is executed only once.\r\n     *\r\n     * @param {String} evName\r\n     *  The event name. This can be a list of event delimited with a space. Each\r\n     *  event listeners will be triggered at most once.\r\n     * @param {Function} callback\r\n     *\r\n     * @return {EventEmitter#EventListener}\r\n     */\n    once: function once(evName, callback) {\n        var _this2 = this;\n\n        var events = getEventNameList(evName).reduce(function (eventListeners, eventName) {\n            var eventNameListener = _this2.on(evName, function () {\n                eventNameListener.off();\n                callback.apply(undefined, arguments);\n            });\n\n            eventListeners[eventName] = eventNameListener;\n            return eventListeners;\n        }, {});\n\n        var response = {\n            off: function off() {\n                objectKeys(events).forEach(function (eventName) {\n                    return events[eventName].off();\n                });\n            }\n        };\n\n        response.listeners = events;\n        return response;\n    },\n\n    /**\r\n     * Emit an event and execute any callback listening. Any of the listening\r\n     * events can cancel the calling of queued callbacks by returning `true`\r\n     * (boolean)\r\n     *\r\n     * @param {String} evName\r\n     *  The event name to be triggered. __NOTE__: can not be a `\"*\"` or the EventEmitter\r\n     *  instance since they holds special meaning.\r\n     *\r\n     * @param {...*} callbackArgs\r\n     */\n    emit: function emit(evName) {\n        if (evName === \"*\" || evName === this) {\n            console.log(\"EventEmitter#emit(): can not emit to events to '*'\"); // jshint ignore:line\n            return;\n        }\n\n        var setup = getSetup.call(this);\n        var eventListeners = setup.listeners;\n        var eventPipes = setup.pipes;\n        var eventAll = setup.all;\n        var args = arraySlice(arguments, 1);\n        var isCanceled = false;\n        var callbackHandler = function callbackHandler(callback) {\n            if (isFunction(callback)) {\n                var response = callback.apply(callback, args);\n\n                // if a boolean true was returned, don't call any more listeners.\n                if (response === true) {\n                    isCanceled = true;\n                    return true;\n                }\n            }\n        };\n\n        // Regular event listeners\n        if (eventListeners[evName] && eventListeners[evName].size) {\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = eventListeners[evName][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var cb = _step.value;\n\n                    if (callbackHandler(cb)) {\n                        break;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n\n        // Event listeners for all events\n        if (!isCanceled && (\"*\" in eventListeners || eventAll.size)) {\n            // Special event \"*\": pass event name and instance\n            args = arraySlice(arguments, 0);\n            args.push(this);\n\n            if (eventListeners[\"*\"] && eventListeners[\"*\"].size) {\n                var _iteratorNormalCompletion2 = true;\n                var _didIteratorError2 = false;\n                var _iteratorError2 = undefined;\n\n                try {\n                    for (var _iterator2 = eventListeners[\"*\"][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                        var _cb = _step2.value;\n\n                        if (callbackHandler(_cb)) {\n                            break;\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError2 = true;\n                    _iteratorError2 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                            _iterator2.return();\n                        }\n                    } finally {\n                        if (_didIteratorError2) {\n                            throw _iteratorError2;\n                        }\n                    }\n                }\n            }\n\n            if (eventAll.size) {\n                var _iteratorNormalCompletion3 = true;\n                var _didIteratorError3 = false;\n                var _iteratorError3 = undefined;\n\n                try {\n                    for (var _iterator3 = eventAll[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                        var _cb2 = _step3.value;\n\n                        if (callbackHandler(_cb2)) {\n                            break;\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError3 = true;\n                    _iteratorError3 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                            _iterator3.return();\n                        }\n                    } finally {\n                        if (_didIteratorError3) {\n                            throw _iteratorError3;\n                        }\n                    }\n                }\n            }\n\n            // set args back to original\n            args = arraySlice(arguments, 1);\n        }\n\n        if (eventPipes.size) {\n            var _iteratorNormalCompletion4 = true;\n            var _didIteratorError4 = false;\n            var _iteratorError4 = undefined;\n\n            try {\n                for (var _iterator4 = eventPipes[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                    var pipe = _step4.value;\n\n                    pipe && pipe(evName, args);\n                }\n            } catch (err) {\n                _didIteratorError4 = true;\n                _iteratorError4 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                        _iterator4.return();\n                    }\n                } finally {\n                    if (_didIteratorError4) {\n                        throw _iteratorError4;\n                    }\n                }\n            }\n        }\n    },\n\n    /**\r\n     * Emit the events from one instance of EventEmitter to another. Useful\r\n     * for when multiple components are used together as part of a larger\r\n     * component and have the need to emit events to a common EventEmitter.\r\n     *\r\n     * @param {EventEmitter} pipeTo\r\n     *  The EventEmitter instance object to where events should be piped.\r\n     *  Can also be an object/class having an `emit(evName, data)` method.\r\n     *\r\n     * @param {String} [prefix]\r\n     *  If defined, prefix will be added to any event emited. Example:\r\n     *  if defining `foo-` as the prefix, then every event emitted will\r\n     *  prefixed wth this value. So a `click` event on the source will\r\n     *  be piped as `foo-click`.\r\n     *\r\n     * @param {Boolean} [includeInstance=true]\r\n     *  When set to `true` (default), the piped event will include the source\r\n     *  instance as an additional argument to the event that is piped.\r\n     *\r\n     *  @return {EventListener}\r\n     */\n    pipe: function pipe(pipeTo, prefix, includeInstance) {\n        var _this3 = this;\n\n        if (!pipeTo || !pipeTo.emit) {\n            return { off: function off() {} };\n        }\n\n        var pipes = getSetup.call(this).pipes;\n\n        var pipeEvToReceiver = function pipeEvToReceiver(triggeredEvName, args) {\n            if (prefix) {\n                args.unshift(prefix + triggeredEvName);\n            } else {\n                args.unshift(triggeredEvName);\n            }\n\n            if (includeInstance || typeof includeInstance === \"undefined\") {\n                args.push(_this3);\n            }\n\n            pipeTo.emit.apply(pipeTo, args);\n        };\n\n        pipes.add(pipeEvToReceiver);\n\n        return {\n            off: function off() {\n                pipes.delete(pipeEvToReceiver);\n            }\n        };\n    },\n\n    /**\r\n     * Returns a boolean indicating if the current EventEmitter has listener\r\n     * @returns {Boolean}\r\n     */\n    hasListeners: function hasListeners() {\n        var _getSetup$call3 = getSetup.call(this),\n            listeners = _getSetup$call3.listeners,\n            pipes = _getSetup$call3.pipes;\n\n        return objectKeys(listeners).some(function (evName) {\n            return !!listeners[evName].size;\n        }) || !!pipes.size;\n    },\n    destroy: function destroy() {\n        __WEBPACK_IMPORTED_MODULE_0__Compose__[\"a\" /* default */].prototype.destroy.call(this, true); // destroy now!\n    }\n});\n\n/**\r\n * Returns the instance setup object. Creates it if it does not have one.\r\n * @private\r\n * @this EventEmitter\r\n */\nfunction getSetup() {\n    if (!PRIVATE.has(this)) {\n        /*\r\n            listeners: {\r\n                'evName': Set[ Callbacks ]\r\n            },\r\n            pipes: Set[ Callbacks ]\r\n            all: Set[ Callbacks ]\r\n        */\n        PRIVATE.set(this, {\n            listeners: {},\n            pipes: new __WEBPACK_IMPORTED_MODULE_2__es6_Set__[\"a\" /* default */](),\n            all: new __WEBPACK_IMPORTED_MODULE_2__es6_Set__[\"a\" /* default */]()\n        });\n\n        // When this object is destroyed, remove all data\n        if (this.onDestroy) {\n            this.onDestroy(function () {\n                if (PRIVATE.has(this)) {\n                    PRIVATE['delete'](this); // using ['delete'] because of IE\n                }\n            }.bind(this));\n        }\n    }\n    return PRIVATE.get(this);\n}\n\nfunction getEventNameList(eventNamesStr) {\n    if (\"string\" === typeof eventNamesStr) {\n        return eventNamesStr.split(/\\s+/);\n    }\n    return [eventNamesStr];\n}\n\n/**\r\n * Adds event emitter functionality to an object\r\n *\r\n * @param {Object} target\r\n */\nEventEmitter.mixin = function (target) {\n    if (target) {\n        [\"on\", \"off\", \"emit\", \"once\", \"pipe\"].forEach(function (method) {\n            Object.defineProperty(target, method, {\n                configurable: true,\n                value: EventEmitter.prototype[method].bind(target)\n            });\n        });\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (EventEmitter);\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export dataStore */\n// POLYFILL FOR WEAKMAP\n//  [pt] changed how \"delete\" is defined so that it can work in IE8\n\n/* jshint ignore:start */\n/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\nif (typeof WeakMap === 'undefined') {\n  (function () {\n    var defineProperty = Object.defineProperty;\n    var counter = Date.now() % 1e9;\n\n    var WeakMap = function WeakMap() {\n      this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\n    };\n\n    WeakMap.prototype = {\n      set: function set(key, value) {\n        var entry = key[this.name];\n        if (entry && entry[0] === key) entry[1] = value;else defineProperty(key, this.name, { value: [key, value], writable: true });\n        return this;\n      },\n      get: function get(key) {\n        var entry;\n        return (entry = key[this.name]) && entry[0] === key ? entry[1] : undefined;\n      },\n      // [pt] Quotes around the delete property needed for IE8\n      \"delete\": function _delete(key) {\n        var entry = key[this.name];\n        if (!entry || entry[0] !== key) return false;\n        entry[0] = entry[1] = undefined;\n        return true;\n      },\n      has: function has(key) {\n        var entry = key[this.name];\n        if (!entry) return false;\n        return entry[0] === key;\n      }\n    };\n\n    window.WeakMap = WeakMap;\n  })();\n}\n/* jshint ignore:end */\n\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\nvar dataStore = /** @lends dataStore */{\n  /**\r\n   * Stash data here.\r\n   * @type WeakMap\r\n   */\n  stash: new WeakMap(),\n  /**\r\n   * Create a private data store and return it.\r\n   * @return {WeakMap}\r\n   */\n  create: function create() {\n    return new WeakMap();\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (dataStore);\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export nextTick */\nvar reIsNativeCode = /native code/i;\n\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\nvar nextTick = function () {\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\n        return setImediate;\n    }\n\n    // Native Promsie? Use it.\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\n        var resolved = Promise.resolve();\n        return function _nextTick(fn) {\n            resolved.then(fn).catch(function (e) {\n                return console.log(e);\n            });\n        };\n    }\n\n    // fallback to setTimeout\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\n    var immediates = [];\n    var processing = false;\n\n    function processPending() {\n        setTimeout(function () {\n            immediates.shift()();\n            if (immediates.length) {\n                processPending();\n            } else {\n                processing = false;\n            }\n        }, 0);\n    }\n\n    return function _nextTick(fn) {\n        immediates.push(fn);\n        if (!processing) {\n            processing = true;\n            processPending();\n        }\n    };\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (nextTick);\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return PRIVATE; });\n/* unused harmony export INTERNAL_EVENTS */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return EV_STOP_DEPENDEE_NOTIFICATION; });\n/* unused harmony export ARRAY_PROTOTYPE */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return OBJECT_PROTOTYPE; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return IS_COMPUTED_NOTIFIER; });\n/* unused harmony export OBSERVABLE_FLAG */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return bindCallTo; });\n/* unused harmony export dependeeList */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return onInternalEvent; });\n/* unused harmony export emitInternalEvent */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return isArray; });\n/* unused harmony export arrayIndexOf */\n/* unused harmony export arraySplice */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return arrayForEach; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return isPureObject; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return isObservable; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return setObservableFlag; });\n/* harmony export (immutable) */ __webpack_exports__[\"l\"] = setDependencyTracker;\n/* harmony export (immutable) */ __webpack_exports__[\"p\"] = unsetDependencyTracker;\n/* harmony export (immutable) */ __webpack_exports__[\"n\"] = stopDependeeNotifications;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return queueDependeeNotifier; });\n/* harmony export (immutable) */ __webpack_exports__[\"o\"] = storeDependeeNotifiers;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_micro_libs_src_jsutils_EventEmitter__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_micro_libs_src_jsutils_nextTick__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_common_micro_libs_src_jsutils_dataStore__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_common_micro_libs_src_jsutils_es6_Set__ = __webpack_require__(0);\n\n\n\n\n\n//=======================================================================\nvar NOOP = function NOOP() {};\n\nvar PRIVATE = __WEBPACK_IMPORTED_MODULE_2_common_micro_libs_src_jsutils_dataStore__[\"a\" /* default */].create();\nvar INTERNAL_EVENTS = __WEBPACK_IMPORTED_MODULE_0_common_micro_libs_src_jsutils_EventEmitter__[\"a\" /* default */].create();\nvar EV_STOP_DEPENDEE_NOTIFICATION = \"1\";\nvar ARRAY_PROTOTYPE = Array.prototype;\nvar OBJECT_PROTOTYPE = Object.prototype;\nvar IS_COMPUTED_NOTIFIER = \"__od_cn__\";\nvar OBSERVABLE_FLAG = \"___observable_data___\";\n\nvar bindCallTo = Function.call.bind.bind(Function.call);\nvar dependeeList = new __WEBPACK_IMPORTED_MODULE_3_common_micro_libs_src_jsutils_es6_Set__[\"a\" /* default */]();\nvar onInternalEvent = INTERNAL_EVENTS.on.bind(INTERNAL_EVENTS);\nvar emitInternalEvent = INTERNAL_EVENTS.emit.bind(INTERNAL_EVENTS);\nvar isArray = Array.isArray;\nvar arrayIndexOf = bindCallTo(ARRAY_PROTOTYPE.indexOf);\nvar arraySplice = bindCallTo(ARRAY_PROTOTYPE.splice);\nvar arrayForEach = bindCallTo(ARRAY_PROTOTYPE.forEach);\nvar isPureObject = function isPureObject(obj) {\n    return obj && OBJECT_PROTOTYPE.toString.call(obj) === \"[object Object]\";\n};\nvar isObservable = function isObservable(obj) {\n    return obj && obj[OBSERVABLE_FLAG] === NOOP;\n};\nvar setObservableFlag = function setObservableFlag(obj) {\n    return obj && Object.defineProperty(obj, OBSERVABLE_FLAG, { get: function get() {\n            return NOOP;\n        } });\n};\n\n/**\r\n * Allows for adding a Dependee notifier to the global list of dependency trackers.\r\n *\r\n * @param {Function} dependeeNotifier\r\n */\nfunction setDependencyTracker(dependeeNotifier) {\n    if (dependeeNotifier) {\n        dependeeList.add(dependeeNotifier);\n    }\n}\n\n/**\r\n * Removes a Dependee notifier from the global list of dependency trackers.\r\n *\r\n * @param {Function} dependeeNotifier\r\n */\nfunction unsetDependencyTracker(dependeeNotifier) {\n    if (!dependeeNotifier) {\n        return;\n    }\n    dependeeList.delete(dependeeNotifier);\n}\n\n/**\r\n * Removes a Dependee notifier from any stored ObservableProperty list of dependees, thus\r\n * stopping all notifications to that depenedee.\r\n *\r\n * @param {Function} dependeeNotifier\r\n */\nfunction stopDependeeNotifications(dependeeNotifier) {\n    if (dependeeNotifier) {\n        emitInternalEvent(EV_STOP_DEPENDEE_NOTIFICATION, dependeeNotifier);\n    }\n}\n\nvar queueDependeeNotifier = function () {\n    var dependeeNotifiers = new __WEBPACK_IMPORTED_MODULE_3_common_micro_libs_src_jsutils_es6_Set__[\"a\" /* default */]();\n    var execNotifiers = function execNotifiers() {\n        dependeeNotifiers.forEach(function (notifierCb) {\n            return notifierCb();\n        });\n        dependeeNotifiers.clear();\n    };\n\n    return function (notifierCb) {\n        // Computed property notifiers are lightweight, so execute\n        // these now and don't queue them.\n        if (notifierCb[IS_COMPUTED_NOTIFIER]) {\n            notifierCb();\n            return;\n        }\n\n        if (!notifierCb || dependeeNotifiers.has(notifierCb)) {\n            return;\n        }\n\n        var callNextTick = !dependeeNotifiers.size;\n        dependeeNotifiers.add(notifierCb);\n\n        if (callNextTick) {\n            Object(__WEBPACK_IMPORTED_MODULE_1_common_micro_libs_src_jsutils_nextTick__[\"a\" /* default */])(execNotifiers);\n        }\n    };\n}();\n\nfunction storeDependeeNotifiers(store) {\n    if (store && dependeeList.size) {\n        dependeeList.forEach(function (dependeeCallback) {\n            return store.add(dependeeCallback);\n        });\n    }\n}\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export getDestroyCallback */\n/* unused harmony export Compose */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__objectExtend__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__dataStore__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__queueCallback__ = __webpack_require__(10);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n\n\n\n\n//=========================================================\nvar PRIVATE = __WEBPACK_IMPORTED_MODULE_1__dataStore__[\"a\" /* default */].create();\nvar COMMON_DESTROY_METHOD_NAME = [\"destroy\", // Compose\n\"remove\", // DOM Events Listeners\n\"off\" // EventEmitter Listeners\n];\n\n// Aliases\nvar objectCreate = Object.create;\n\n// return all KEYs of an object, even those that are not iterable\nfunction objectKeys(prototype) {\n    var k = void 0,\n        keys = [];\n    for (k in prototype) {\n        keys.push(k);\n    }\n    return keys;\n}\n\n// Base instance methods for Compose'd object\nvar baseMethods = /** @lends Compose.prototype */{\n\n    /**\r\n     * Property indicating whether instance has been destroyed\r\n     */\n    isDestroyed: false,\n\n    /**\r\n     * instance initializing code\r\n     */\n    init: function init() {},\n\n\n    /**\r\n     * Destroys the instance, by removing its private data.\r\n     * Any attached `onDestroy` callback will be executed `async` - queued and\r\n     * called on next event loop\r\n     *\r\n     * @param {Boolean} [executeCallbacksNow=false]\r\n     */\n    destroy: function destroy(executeCallbacksNow) {\n        if (PRIVATE.has(this)) {\n            var destroyCallbacks = PRIVATE.get(this);\n            PRIVATE.delete(this);\n\n            if (executeCallbacksNow) {\n                destroyCallbacks.forEach(callOnDestroyCallback);\n            } else {\n                Object(__WEBPACK_IMPORTED_MODULE_2__queueCallback__[\"a\" /* default */])(function () {\n                    return destroyCallbacks.forEach(callOnDestroyCallback);\n                });\n            }\n        }\n\n        if (\"boolean\" === typeof this.isDestroyed) {\n            this.isDestroyed = true;\n        }\n    },\n\n\n    /**\r\n     * Adds a callback to the queue to be called when this object's `.destroy()`\r\n     * is called.\r\n     *\r\n     * @param {Function} callback\r\n     */\n    onDestroy: function onDestroy(callback) {\n        getInstanceState(this).push(callback);\n    },\n\n\n    /**\r\n     * Returns the factory for this instance.\r\n     *\r\n     * @return {Compose}\r\n     */\n    getFactory: function getFactory() {\n        if (this.constructor) {\n            return this.constructor;\n        }\n    }\n};\n\nvar staticMethods = /** @lends Compose */{\n    /**\r\n     * Creates an new factory based on the prototye of the current Factory\r\n     * and any other Factory given on input.\r\n     *\r\n     * @return {Compose}\r\n     */\n    extend: function extend() {\n        var Class = function (_ref) {\n            _inherits(Class, _ref);\n\n            function Class() {\n                _classCallCheck(this, Class);\n\n                return _possibleConstructorReturn(this, (Class.__proto__ || Object.getPrototypeOf(Class)).apply(this, arguments));\n            }\n\n            return Class;\n        }(this);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        Object(__WEBPACK_IMPORTED_MODULE_0__objectExtend__[\"a\" /* default */])(Class.prototype, args.reduce(function (newProto, obj) {\n            if (obj) {\n                var thisObjProto = obj.prototype || obj;\n                objectKeys(thisObjProto).forEach(function (objKey) {\n                    newProto[objKey] = thisObjProto[objKey];\n                });\n            }\n            return newProto;\n        }, {}));\n\n        return Class;\n    },\n\n    /**\r\n     * Checks if the Object given on input looks like an instance of this Factory.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    isInstanceOf: function isInstanceOf(instanceObj) {\n\n        if (!instanceObj) {\n            return false;\n        }\n\n        var neededKeys = objectKeys(this.prototype);\n\n        // If any prototype key is not in the object prototype, then return false\n        return !neededKeys.some(function (protoKey) {\n            return typeof instanceObj[protoKey] === \"undefined\";\n        });\n    },\n\n    /**\r\n     * Creates an instance object based on this factory.\r\n     *\r\n     * @return {Object}\r\n     */\n    create: function create() {\n        return new (Function.prototype.bind.apply(this, [null].concat(Array.prototype.slice.call(arguments))))();\n    },\n\n    /**\r\n     * Returns a standard callback that can be used to remove cleanup instance state\r\n     * from specific Store (WeakMap). Returned function will destroy known Instances\r\n     * that have destroy methods.\r\n     *\r\n     * @param {Object} instanceState\r\n     * @param {WeakMap} [stateStore]\r\n     *\r\n     * @return {Function}\r\n     *\r\n     * @example\r\n     *\r\n     * const MY_PRIVATE = new WeakMap();\r\n     * cont NewWdg = Componse.extend({\r\n     *      init() {\r\n     *          const state = {};\r\n     *          MY_PRIVATE.set(this, state);\r\n     *          ...\r\n     *\r\n     *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n     *      }\r\n     * });\r\n     */\n    getDestroyCallback: getDestroyCallback\n};\n\n/**\r\n * Returns a standard callback that can be used to remove cleanup instance state\r\n * from specific Store (WeakMap). Returned function will destroy known Instances\r\n * that have destroy methods.\r\n *\r\n * @method Compose~getDestroyCallback\r\n *\r\n * @param {Object} instanceState\r\n * @param {WeakMap} [stateStore]\r\n *\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * const MY_PRIVATE = new WeakMap();\r\n * cont NewWdg = Componse.extend({\r\n *      init() {\r\n *          const state = {};\r\n *          MY_PRIVATE.set(this, state);\r\n *          ...\r\n *\r\n *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n *      }\r\n * });\r\n */\nfunction getDestroyCallback(instanceState, stateStore) {\n    return function () {\n        if (instanceState) {\n            // Destroy all Compose object\n            Object.keys(instanceState).forEach(function (prop) {\n                if (instanceState[prop]) {\n                    COMMON_DESTROY_METHOD_NAME.some(function (method) {\n                        if (instanceState[prop][method] && (method !== \"remove\" || !(instanceState[prop] instanceof Node)) // Caution: should not remove DOM elements.\n                        ) {\n                                instanceState[prop][method]();\n                                return true;\n                            }\n                    });\n\n                    instanceState[prop] = undefined;\n                }\n            });\n        }\n\n        if (stateStore && stateStore.has && stateStore.has(instanceState)) {\n            stateStore.delete(instanceState);\n        }\n    };\n}\n\nfunction getInstanceState(inst) {\n    if (!PRIVATE.has(inst)) {\n        PRIVATE.set(inst, []);\n    }\n\n    return PRIVATE.get(inst);\n}\n\nfunction callOnDestroyCallback(callback) {\n    if (\"function\" === typeof callback) {\n        callback();\n    }\n}\n\nfunction getNewConstructor() {\n    function ComposeConstructor() {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n        }\n\n        // Called with `new`?\n        if (this && this.constructor && this instanceof this.constructor) {\n            return this.init.apply(this, args);\n        }\n\n        // called directly\n        return new (Function.prototype.bind.apply(ComposeConstructor, [null].concat(args)))();\n    }\n\n    ComposeConstructor.prototype.constructor = ComposeConstructor;\n    return ComposeConstructor;\n}\n\n/**\r\n * Composes new factory methods from a list of given Objects/Classes.\r\n *\r\n * @class Compose\r\n * @borrows Compose~getDestroyCallback as Compose.getDestroyCallback\r\n *\r\n * @example\r\n *\r\n * var Widget = Compose.create(Model, Events);\r\n *\r\n * myWidget = Widget.create();\r\n *\r\n */\nvar Compose = getNewConstructor();\nObject(__WEBPACK_IMPORTED_MODULE_0__objectExtend__[\"a\" /* default */])(Compose.prototype, baseMethods);\nObject(__WEBPACK_IMPORTED_MODULE_0__objectExtend__[\"a\" /* default */])(Compose, staticMethods);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Compose);\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export objectExtend */\nvar OBJECT_TYPE = \"[object Object]\";\nvar _toString = Function.call.bind(Object.prototype.toString);\n\n//============================================================\n\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\nfunction objectExtend(mergeIntoObj) {\n    var response = mergeIntoObj || {};\n\n    for (var _len = arguments.length, mergeObjects = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        mergeObjects[_key - 1] = arguments[_key];\n    }\n\n    var total = mergeObjects.length;\n    var deepMerge = false;\n    var i = void 0;\n    var key = void 0;\n\n    if (typeof mergeIntoObj === \"boolean\") {\n        deepMerge = mergeIntoObj;\n        response = mergeObjects.shift() || {};\n        total = mergeObjects.length;\n    }\n\n    for (i = 0; i < total; i++) {\n        if (!mergeObjects[i]) {\n            continue;\n        }\n\n        for (key in mergeObjects[i]) {\n            if (mergeObjects[i].hasOwnProperty(key)) {\n                if (deepMerge && _toString(response[key]) === OBJECT_TYPE && _toString(mergeObjects[i][key]) === OBJECT_TYPE) {\n                    response[key] = objectExtend(true, response[key], mergeObjects[i][key]);\n                } else {\n                    response[key] = mergeObjects[i][key];\n                }\n            }\n        }\n    }\n    return response;\n}\n/* harmony default export */ __webpack_exports__[\"a\"] = (objectExtend);\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export functionBind */\n/* unused harmony export functionBindCall */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return objectDefineProperty; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return objectDefineProperties; });\n/* unused harmony export objectKeys */\n/* unused harmony export arrayForEach */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return arrayIndexOf; });\n/* unused harmony export arraySplice */\n\n// Function\n// functionBind(fn, fnParent)\nvar functionBind = Function.bind.call.bind(Function.bind);\n// functionBindCall(Array.prototype.forEach)\nvar functionBindCall = functionBind(Function.call.bind, Function.call);\n\n// Object\nvar objectDefineProperty = Object.defineProperty;\nvar objectDefineProperties = Object.defineProperties;\nvar objectKeys = Object.keys;\n\n// Array\nvar arr = [];\nvar arrayForEach = functionBindCall(arr.forEach);\nvar arrayIndexOf = functionBindCall(arr.indexOf);\nvar arraySplice = functionBindCall(arr.splice);\n\n/***/ }),\n/* 8 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (immutable) */ __webpack_exports__[\"observeAll\"] = observeAll;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__ObservableArray__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__ObservableObject__ = __webpack_require__(15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__common__ = __webpack_require__(4);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ObservableArray\", function() { return __WEBPACK_IMPORTED_MODULE_0__ObservableArray__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"ObservableObject\", function() { return __WEBPACK_IMPORTED_MODULE_1__ObservableObject__[\"a\"]; });\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\n\n\n\n//==================================================================\n\n/**\r\n * Observes all data - object and arrays - given on input.\r\n *\r\n * @param {...Object|...Array} data\r\n */\nfunction observeAll() {\n    for (var _len = arguments.length, data = Array(_len), _key = 0; _key < _len; _key++) {\n        data[_key] = arguments[_key];\n    }\n\n    Object(__WEBPACK_IMPORTED_MODULE_2__common__[\"e\" /* arrayForEach */])(data, function (dataItem) {\n        if (Object(__WEBPACK_IMPORTED_MODULE_2__common__[\"h\" /* isObservable */])(dataItem)) {\n            return;\n        }\n        if (Object(__WEBPACK_IMPORTED_MODULE_2__common__[\"i\" /* isPureObject */])(dataItem)) {\n            Object(__WEBPACK_IMPORTED_MODULE_1__ObservableObject__[\"b\" /* makeObservable */])(dataItem, null, true, function (propValue) {\n                if (propValue && Object(__WEBPACK_IMPORTED_MODULE_2__common__[\"g\" /* isArray */])(propValue)) {\n                    observeAll(propValue);\n                }\n            });\n        } else if (Object(__WEBPACK_IMPORTED_MODULE_2__common__[\"g\" /* isArray */])(dataItem)) {\n            Object(__WEBPACK_IMPORTED_MODULE_0__ObservableArray__[\"b\" /* mixin */])(dataItem);\n            observeAll.apply(undefined, _toConsumableArray(dataItem));\n        }\n    });\n}\n\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = mixin;\n/* unused harmony export ObservableArray */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_micro_libs_src_jsutils_EventEmitter__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_micro_libs_src_jsutils_nextTick__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_common_micro_libs_src_jsutils_es6_Set__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__common__ = __webpack_require__(4);\n/* unused harmony reexport setDependencyTracker */\n/* unused harmony reexport unsetDependencyTracker */\n/* unused harmony reexport stopDependeeNotifications */\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\n\n\n\n\n\n//==============================================================\nvar ArrayPrototype = Array.prototype;\nvar objectDefineProp = Object.defineProperty;\nvar objectKeys = Object.keys;\nvar emit = Object(__WEBPACK_IMPORTED_MODULE_3__common__[\"f\" /* bindCallTo */])(__WEBPACK_IMPORTED_MODULE_0_common_micro_libs_src_jsutils_EventEmitter__[\"a\" /* default */].prototype.emit);\nvar changeMethods = ['pop', 'push', 'shift', 'splice', 'unshift', 'sort', 'reverse'];\nvar addMethods = ['push', 'splice', 'unshift'];\nvar removeMethods = ['pop', 'shift', 'splice'];\n\n/**\r\n * An Array like object with the added ability to listen to events.\r\n * It supports all methods available to a normal array, like `forEach`,\r\n * `some` and `reduce`\r\n *\r\n * @class ObservableArray\r\n *\r\n * @extends EventEmitter\r\n * @extends Array\r\n *\r\n * @fires ObservableArray#change\r\n */\nvar ObservableArray = __WEBPACK_IMPORTED_MODULE_0_common_micro_libs_src_jsutils_EventEmitter__[\"a\" /* default */].extend( /** @lends ObservableArray.prototype */{\n\n    /**\r\n     * The length of the array. Unlike the `length` property, this one is able\r\n     * to notify dependees if any are set to be track dependencies.\r\n     *\r\n     * @name len\r\n     * @type {Number}\r\n     */\n\n    // For backwards compatible with initial version\n    // use `len` property instead\n    size: function size() {\n        Object(__WEBPACK_IMPORTED_MODULE_3__common__[\"o\" /* storeDependeeNotifiers */])(getInstance(this).dependees);\n        return this.length;\n    },\n\n    /**\r\n     * Returns a member of the collection given an index (zero based),\r\n     * or updates the item at a given index with a new value.\r\n     *\r\n     * @param {Number} index\r\n     * @param {*} [newValue]\r\n     */\n    item: function item(index) {\n        var args = ArrayPrototype.slice.call(arguments, 0);\n        var _array = this;\n\n        Object(__WEBPACK_IMPORTED_MODULE_3__common__[\"o\" /* storeDependeeNotifiers */])(getInstance(this).dependees);\n\n        // GET mode..\n        if (args.length === 1) {\n            return _array[index];\n        }\n\n        // Update mode... Emits event\n        var events = getNewEventObject();\n        if (_array[index] === args[1]) {\n            events.updated = [args[1]];\n        } else {\n            events.removed = [_array[index]];\n            events.added = [args[1]];\n        }\n\n        var updateResponse = _array[index] = args[1];\n        notifyDependees(_array, events);\n\n        return updateResponse;\n    }\n});\n\nfunction getInstance(obArray) {\n    if (!__WEBPACK_IMPORTED_MODULE_3__common__[\"d\" /* PRIVATE */].has(obArray)) {\n        var dependees = new __WEBPACK_IMPORTED_MODULE_2_common_micro_libs_src_jsutils_es6_Set__[\"a\" /* default */]();\n        var isQueued = false;\n        var nextEvent = null;\n        var storeEventData = function storeEventData(events) {\n            if (!events) {\n                return;\n            }\n\n            if (!nextEvent) {\n                nextEvent = getNewEventObject();\n            }\n\n            objectKeys(events).forEach(function (eventName) {\n                var _nextEvent$eventName;\n\n                if (!events[eventName]) {\n                    return;\n                }\n\n                if (!nextEvent[eventName]) {\n                    nextEvent[eventName] = [];\n                }\n\n                (_nextEvent$eventName = nextEvent[eventName]).push.apply(_nextEvent$eventName, _toConsumableArray(events[eventName]));\n            });\n        };\n        var inst = {\n            dependees: dependees,\n\n            notify: function notify(events) {\n                // Queue up calling all dependee notifiers\n                dependees.forEach(function (cb) {\n                    return Object(__WEBPACK_IMPORTED_MODULE_3__common__[\"k\" /* queueDependeeNotifier */])(cb);\n                });\n                storeEventData(events);\n\n                if (isQueued) {\n                    return;\n                }\n\n                isQueued = true;\n                Object(__WEBPACK_IMPORTED_MODULE_1_common_micro_libs_src_jsutils_nextTick__[\"a\" /* default */])(function () {\n                    var eventData = nextEvent;\n                    nextEvent = null;\n                    /**\r\n                     * ObservableArray was changed.\r\n                     *\r\n                     * @event ObservableArray#change\r\n                     * @type {ObservableArray~ObservableArrayChangeEvent}\r\n                     */\n                    emit(obArray, \"change\", eventData);\n                    isQueued = false;\n                });\n            }\n        };\n\n        __WEBPACK_IMPORTED_MODULE_3__common__[\"d\" /* PRIVATE */].set(obArray, inst);\n\n        var ev1 = Object(__WEBPACK_IMPORTED_MODULE_3__common__[\"j\" /* onInternalEvent */])(__WEBPACK_IMPORTED_MODULE_3__common__[\"a\" /* EV_STOP_DEPENDEE_NOTIFICATION */], function (cb) {\n            dependees.delete(cb);\n        });\n\n        if (obArray.onDestroy) {\n            obArray.onDestroy(function () {\n                dependees.clear();\n                ev1.off();\n                __WEBPACK_IMPORTED_MODULE_3__common__[\"d\" /* PRIVATE */].delete(obArray);\n            });\n        }\n    }\n    return __WEBPACK_IMPORTED_MODULE_3__common__[\"d\" /* PRIVATE */].get(obArray);\n}\n\n/**\r\n * Converts an array instance methods to a wrapped version that can detect changes\r\n * and also track dependee notifiers when data is accessed from the array\r\n *\r\n * @param {Array} arr\r\n *\r\n * @return {Array}\r\n */\nfunction makeArrayObservable(arr) {\n    // If it looks like this array is already an being observered, then exit.\n    if (Object(__WEBPACK_IMPORTED_MODULE_3__common__[\"h\" /* isObservable */])(arr)) {\n        return;\n    }\n\n    Object(__WEBPACK_IMPORTED_MODULE_3__common__[\"m\" /* setObservableFlag */])(arr);\n\n    var arrCurrentProto = arr.__proto__; // eslint-disable-line\n    var newArrProto = void 0;\n\n    // If we already have a wrapped prototype for this array's\n    // current prototype, then just use that\n    if (__WEBPACK_IMPORTED_MODULE_3__common__[\"d\" /* PRIVATE */].has(arrCurrentProto)) {\n        newArrProto = __WEBPACK_IMPORTED_MODULE_3__common__[\"d\" /* PRIVATE */].get(arrCurrentProto); // eslint-disable-line\n    }\n    // ELSE: create a wrapped prototype for this array's prototype\n    else {\n            // Create new Array instance prototype\n            newArrProto = Object.create(arrCurrentProto);\n\n            // Add all methods of Array.prototype to the collection\n            Object.getOwnPropertyNames(ArrayPrototype).forEach(function (method) {\n                if (method === \"constructor\" || typeof ArrayPrototype[method] !== \"function\") {\n                    return;\n                }\n\n                var origMethod = newArrProto[method];\n                var doEvents = changeMethods.indexOf(method) !== -1;\n                var canAdd = addMethods.indexOf(method) !== -1;\n                var canRemove = removeMethods.indexOf(method) !== -1;\n                var isArraySplice = method === \"splice\";\n\n                objectDefineProp(newArrProto, method, {\n                    value: function observable() {\n                        var _this = this;\n\n                        Object(__WEBPACK_IMPORTED_MODULE_3__common__[\"o\" /* storeDependeeNotifiers */])(getInstance(this).dependees);\n\n                        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                            args[_key] = arguments[_key];\n                        }\n\n                        var response = origMethod.call.apply(origMethod, [this].concat(args));\n\n                        // If the response is an array, then add method to it that allows it\n                        // to be converted to an observable\n                        if (Object(__WEBPACK_IMPORTED_MODULE_3__common__[\"g\" /* isArray */])(response) && response !== this) {\n                            objectDefineProp(response, \"toObservable\", {\n                                value: function value() {\n                                    if (_this.getFactory) {\n                                        return _this.getFactory().create(response);\n                                    }\n\n                                    return mixin(response);\n                                }\n                            });\n                        }\n\n                        // If Array method can manipulate the array, then emit event\n                        if (doEvents) {\n                            var events = getNewEventObject();\n\n                            // Add Events\n                            if (canAdd) {\n                                if (isArraySplice) {\n                                    if (args.length > 2) {\n                                        events.added = args.slice(2);\n                                    }\n                                } else {\n                                    events.added = args;\n                                }\n                            }\n\n                            if (canRemove) {\n                                if (isArraySplice) {\n                                    events.removed = response;\n                                } else {\n                                    events.removed = [response];\n                                }\n                            }\n\n                            notifyDependees(this, events);\n                        }\n\n                        return response;\n                    },\n                    writable: true,\n                    configurable: true\n                });\n            });\n\n            // Add `len` property, which is shorthand for `length` but with added\n            // ability to observe for array changes when called and trigger notifiers\n            // when changed.\n            objectDefineProp(newArrProto, \"len\", {\n                get: function get() {\n                    Object(__WEBPACK_IMPORTED_MODULE_3__common__[\"o\" /* storeDependeeNotifiers */])(getInstance(this).dependees);\n                    return this.length;\n                },\n                set: function set(n) {\n                    var response = this.length = n;\n                    notifyDependees(this);\n                    return response;\n                },\n\n\n                configurable: true\n            });\n\n            __WEBPACK_IMPORTED_MODULE_3__common__[\"d\" /* PRIVATE */].set(arrCurrentProto, newArrProto);\n        }\n\n    arr.__proto__ = newArrProto; // eslint-disable-line\n\n    return arr;\n}\n\nfunction notifyDependees(arrObj, events) {\n    getInstance(arrObj).notify(events);\n}\n\n/**\r\n * Make an array instance observable in place\r\n *\r\n * @param {Array} arr\r\n *\r\n * @return {Array}\r\n */\nfunction mixin(arr) {\n    if (!Object(__WEBPACK_IMPORTED_MODULE_3__common__[\"g\" /* isArray */])(arr)) {\n        arr = [];\n    }\n\n    return ObservableArray.create(arr);\n}\n\n// Define the \"create\" factory method that will then redefine each\n// our proxyied methods of Array prototype into the array instance\nobjectDefineProp(ObservableArray, \"create\", {\n    value: function value(arrayInstance) {\n        var observable = arrayInstance || [];\n        var thisPrototype = this.prototype;\n\n        if (Object(__WEBPACK_IMPORTED_MODULE_3__common__[\"h\" /* isObservable */])(observable)) {\n            return observable;\n        }\n\n        makeArrayObservable(observable);\n        var observableProto = observable.__proto__; // eslint-disable-line\n\n        // Copy all methods in this prototype to the Array instance\n        for (var prop in thisPrototype) {\n            /* eslint-disable */\n            objectDefineProp(observableProto, prop, {\n                value: thisPrototype[prop],\n                writable: true,\n                configurable: true\n            });\n            /* eslint-enable */\n        }\n\n        if (observable.init) {\n            observable.init.apply(observable, arguments);\n        }\n\n        return observable;\n    }\n});\n\nfunction getNewEventObject() {\n    /**\r\n     * The array was changed.\r\n     *\r\n     * @typedef {Object} ObservableArray~ObservableArrayChangeEvent\r\n     * @property {Array|null} added\r\n     * @property {Array|null} removed\r\n     * @property {Array|null} updated\r\n     */\n    return { added: null, removed: null, updated: null };\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ObservableArray);\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export queueCallback */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__es6_Set__ = __webpack_require__(0);\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\n\n//===============================================\nvar callbacks = new __WEBPACK_IMPORTED_MODULE_0__es6_Set__[\"a\" /* default */]();\nvar queue = void 0;\n\n/**\r\n * Queue a callback to be executed after at the start of next event loop.\r\n * This differs from `nextTick` in that callbacks are not executed during\r\n * micro-processing, but rather on next event loop, so this is not ideal\r\n * for logic that can cause UI reflow.\r\n *\r\n * @param {Function} cb\r\n */\nfunction queueCallback(cb) {\n    if (\"function\" === typeof cb) {\n        callbacks.add(cb);\n\n        if (!queue) {\n            queue = setTimeout(flushQueue, 0);\n        }\n    }\n}\n/* harmony default export */ __webpack_exports__[\"a\"] = (queueCallback);\n\nfunction flushQueue() {\n    var cbList = [].concat(_toConsumableArray(callbacks));\n    callbacks.clear();\n    queue = null;\n    var cb = void 0;\n    while (cb = cbList.shift()) {\n        cb();\n        cb = null;\n    }\n}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Set; });\n/* unused harmony export FakeSet */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__getGlobal__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Iterator__ = __webpack_require__(14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__runtime_aliases__ = __webpack_require__(7);\n\n\n\n\n//============================================================\n\nvar Set = Object(__WEBPACK_IMPORTED_MODULE_0__getGlobal__[\"a\" /* default */])().Set || FakeSet;\n/* unused harmony default export */ var _unused_webpack_default_export = (Set);\n\nfunction FakeSet() {\n    // FIXME: support for iterable input\n}\n\nObject(__WEBPACK_IMPORTED_MODULE_2__runtime_aliases__[\"b\" /* objectDefineProperties */])(FakeSet.prototype, {\n    constructor: { value: FakeSet, configurable: true },\n    _: {\n        get: function get() {\n            var values = [];\n            Object(__WEBPACK_IMPORTED_MODULE_2__runtime_aliases__[\"c\" /* objectDefineProperty */])(this, \"_\", { value: values });\n            return values;\n        }\n    },\n    add: {\n        value: function value(item) {\n            if (Object(__WEBPACK_IMPORTED_MODULE_2__runtime_aliases__[\"a\" /* arrayIndexOf */])(this._, item) === -1) {\n                this._.push(item);\n            }\n            return this;\n        }\n    },\n    has: {\n        value: function value(item) {\n            return Object(__WEBPACK_IMPORTED_MODULE_2__runtime_aliases__[\"a\" /* arrayIndexOf */])(this._, item) !== -1;\n        }\n    },\n    size: {\n        get: function get() {\n            return this._.length;\n        }\n    },\n    clear: {\n        value: function value() {\n            this._.splice(0);\n        }\n    },\n    delete: {\n        value: function value(item) {\n            var idx = Object(__WEBPACK_IMPORTED_MODULE_2__runtime_aliases__[\"a\" /* arrayIndexOf */])(this._, item);\n            if (idx !== -1) {\n                this._.splice(idx, 1);\n                return true;\n            }\n            return false;\n        }\n    },\n    values: {\n        value: function value() {\n            return new __WEBPACK_IMPORTED_MODULE_1__Iterator__[\"a\" /* FakeIterator */](this._);\n        }\n    },\n    entries: {\n        value: function value() {\n            return new __WEBPACK_IMPORTED_MODULE_1__Iterator__[\"a\" /* FakeIterator */](this._, this._);\n        }\n    },\n    forEach: {\n        value: function value(cb) {\n            var _this = this;\n\n            this._.forEach(function (item) {\n                return cb(item, item, _this);\n            });\n        }\n    }\n});\n\n/***/ }),\n/* 12 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/* unused harmony export GLOBAL */\n/* unused harmony export getGlobal */\n\nvar GLOBAL = function () {\n    /* global self, window, global */\n    if (typeof window !== 'undefined') {\n        return window;\n    }\n    if (typeof global !== 'undefined') {\n        return global;\n    }\n    if (typeof self !== 'undefined') {\n        return self;\n    }\n    return Function('return this;')();\n}();\n\nfunction getGlobal() {\n    return GLOBAL;\n}\n/* harmony default export */ __webpack_exports__[\"a\"] = (getGlobal);\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(13)))\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar g;\n\n// This works in non-strict mode\ng = function () {\n\treturn this;\n}();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = FakeIterator;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__runtime_aliases__ = __webpack_require__(7);\n\n\n//-----------------------------------------------------------------------\nvar $iterator$ = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\n\n// Great reference: http://2ality.com/2015/02/es6-iteration.html\nfunction FakeIterator(keys, values) {\n    Object(__WEBPACK_IMPORTED_MODULE_0__runtime_aliases__[\"c\" /* objectDefineProperty */])(this, \"_\", { value: {\n            keys: keys.slice(0),\n            values: values ? values.slice(0) : null,\n            idx: 0,\n            total: keys.length\n        } });\n}\n/* unused harmony default export */ var _unused_webpack_default_export = (FakeIterator);\n\nObject(__WEBPACK_IMPORTED_MODULE_0__runtime_aliases__[\"b\" /* objectDefineProperties */])(FakeIterator.prototype, {\n    constructor: { value: FakeIterator },\n    next: {\n        enumerable: true,\n        configurable: true,\n        value: function value() {\n            var response = {\n                done: this._.idx === this._.total\n            };\n\n            if (response.done) {\n                response.value = undefined;\n                return response;\n            }\n\n            var nextIdx = this._.idx++;\n\n            response.value = this._.keys[nextIdx];\n\n            if (this._.values) {\n                response.value = [response.value, this._.values[nextIdx]];\n            }\n\n            return response;\n        }\n    }\n});\nObject(__WEBPACK_IMPORTED_MODULE_0__runtime_aliases__[\"c\" /* objectDefineProperty */])(FakeIterator.prototype, $iterator$, {\n    value: function value() {\n        return this;\n    }\n});\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export createComputedProp */\n/* unused harmony export observableAssign */\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = makeObservable;\n/* unused harmony export watchProp */\n/* unused harmony export watchPropOnce */\n/* unused harmony export unwatchProp */\n/* unused harmony export notifyPropWatchers */\n/* unused harmony export observableMixin */\n/* unused harmony export ObservableObject */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_micro_libs_src_jsutils_Compose__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_micro_libs_src_jsutils_objectExtend__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_common_micro_libs_src_jsutils_EventEmitter__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_common_micro_libs_src_jsutils_nextTick__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_common_micro_libs_src_jsutils_es6_Set__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__common__ = __webpack_require__(4);\n/* unused harmony reexport setDependencyTracker */\n/* unused harmony reexport unsetDependencyTracker */\n/* unused harmony reexport stopDependeeNotifications */\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n\n\n\n\n\n\n\n\n//=======================================================\nvar OBJECT = Object;\n\n// aliases\nvar objectCreate = OBJECT.create;\nvar objectDefineProperty = OBJECT.defineProperty;\nvar objectHasOwnProperty = Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"f\" /* bindCallTo */])(__WEBPACK_IMPORTED_MODULE_5__common__[\"c\" /* OBJECT_PROTOTYPE */].hasOwnProperty);\n\nvar objectKeys = Object.keys;\nvar noopEventListener = objectCreate({\n    off: function off() {}\n});\n\n/**\r\n * Adds the ability to observe `Object` property values for changes.\r\n * Uses an internal `EventEmitter` instance to list and trigger events,\r\n * and `Object.defineProperty` getter/setters to setup watchers on\r\n * property values.\r\n *\r\n * Currently has no support for addition or deletion from the object,\r\n * but with the ES7 forth coming Proxy functionality, that will be\r\n * added.\r\n *\r\n * @class ObservableObject\r\n * @extends Compose\r\n *\r\n * @param {Object} [model]\r\n * @param {Object} [options]\r\n * @param {Boolean} [options.watchAll=true]\r\n *  if `model` was given on input, then all properties will be automatically made watchable.\r\n * @param {Boolean} [options.deep=true]\r\n *  If set to true, the model is walked and all deep objects made observable as well\r\n *\r\n * @example\r\n *\r\n * // Used as a mixin\r\n * var myObj = {\r\n *      first: \"paul\",\r\n *      last: \"tavares\"\r\n * };\r\n *\r\n * ObservableObject.mixin(myObj);\r\n *\r\n * myObj.on(\"first\", function(newValue, oldValue){\r\n *      alert(\"first name was changed\");\r\n * });\r\n *\r\n * @example\r\n *\r\n * // Used as part of a class prototype\r\n * var MyModel = Compose.extend(ObservableObject);\r\n *\r\n * var user = MyModel.create({\r\n *      first: \"paul\",\r\n *      last: \"tavares\"\r\n * });\r\n *\r\n * user.on(\"first\", function(newValue, oldValue){\r\n *  alert(\"first name was change\")\r\n * });\r\n *\r\n */\nvar ObservableObject = __WEBPACK_IMPORTED_MODULE_0_common_micro_libs_src_jsutils_Compose__[\"a\" /* default */].extend( /** @lends ObservableObject.prototype */{\n    init: function init(model, options) {\n        var opt = Object(__WEBPACK_IMPORTED_MODULE_1_common_micro_libs_src_jsutils_objectExtend__[\"a\" /* default */])({}, this.getFactory().defaults, options);\n\n        if (model) {\n            // FIXME: need to create prop that uses original getter/setters from `model` - or no?\n            Object(__WEBPACK_IMPORTED_MODULE_1_common_micro_libs_src_jsutils_objectExtend__[\"a\" /* default */])(this, model);\n\n            if (opt.watchAll) {\n                makeObservable(this, null, opt.deep);\n            }\n\n            getInstance(this).opt = opt;\n        }\n    },\n\n\n    /**\r\n     * Add a callback to changes on a given property\r\n     *\r\n     * @param {String|Object} prop\r\n     *  Object property name. If wanting to list to all changes to the object, the\r\n     *  object instance itself can be passed as the prop.\r\n     *\r\n     * @param {Function} callback\r\n     *  A callback function to list to the event. The callback function\r\n     *  can cancel any queued event callbacks by returning `true` (boolean).\r\n     *\r\n     * @return {EventListener}\r\n     *\r\n     * @example\r\n     *\r\n     * obj.on(\"firstName\", () => {});\r\n     *\r\n     * // List to all changes\r\n     * obj.on(obj, () => {});\r\n     */\n    on: function on(prop, callback) {\n        return watchProp(this, prop, callback);\n    },\n\n    /**\r\n     * Remove a callback the listening queue of a for a given property name\r\n     *\r\n     * @param {String} prop\r\n     *  Object property name\r\n     *\r\n     * @param {Function} callback\r\n     *  The callback that should be removed.\r\n     */\n    off: function off(prop, callback) {\n        unwatchProp(this, prop, callback);\n    },\n\n    /**\r\n     * Add a callback for changes on a given property that is called only once\r\n     *\r\n     * @param {String} prop\r\n     *  Object property name\r\n     *\r\n     * @param {Function} callback\r\n     *  The callback that should be removed.\r\n     */\n    once: function once(prop, callback) {\n        return watchPropOnce(this, prop, callback);\n    },\n\n    /**\r\n     * Emit an event and execute any callback listening. Any of the listening\r\n     * events can cancel the calling of queued callbacks by returning `true`\r\n     * (boolean)\r\n     *\r\n     * @param {String} prop\r\n     */\n    emit: function emit(prop) {\n        return notifyPropWatchers(this, prop);\n    },\n\n    /**\r\n     * Copies the properties of one or more objects into the current observable\r\n     * and makes those properties \"watchable\".\r\n     *\r\n     * @param {...Object} args\r\n     *\r\n     * @returns {Object}\r\n     */\n    assign: function assign() {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        return observableAssign.apply(undefined, [this].concat(_toConsumableArray(args)));\n    },\n\n\n    /**\r\n     * Sets a property on the observable object and automatically makes it watchable\r\n     *\r\n     * @param {String} propName\r\n     * @param {*} [value]\r\n     * @returns {*}\r\n     */\n    setProp: function setProp(propName, value) {\n        makePropWatchable(this, propName);\n        return this[propName] = value;\n    }\n});\n\n/**\r\n * Returns the private Instance data for this object\r\n *\r\n * @private\r\n * @param {Object} observableObj\r\n *\r\n * @return {EventEmitter}\r\n */\nfunction getInstance(observableObj) {\n    if (!__WEBPACK_IMPORTED_MODULE_5__common__[\"d\" /* PRIVATE */].has(observableObj)) {\n        var instData = __WEBPACK_IMPORTED_MODULE_2_common_micro_libs_src_jsutils_EventEmitter__[\"a\" /* default */].create();\n        var watched = instData.watched = {};\n        var isQueued = false;\n\n        Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"m\" /* setObservableFlag */])(observableObj);\n        instData.opt = Object(__WEBPACK_IMPORTED_MODULE_1_common_micro_libs_src_jsutils_objectExtend__[\"a\" /* default */])({}, ObservableObject.defaults);\n        instData.notify = function () {\n            if (isQueued) {\n                return;\n            }\n            isQueued = true;\n            Object(__WEBPACK_IMPORTED_MODULE_3_common_micro_libs_src_jsutils_nextTick__[\"a\" /* default */])(function () {\n                instData.emit(\"\");\n                isQueued = false;\n            });\n        };\n\n        __WEBPACK_IMPORTED_MODULE_5__common__[\"d\" /* PRIVATE */].set(observableObj, instData);\n\n        if (observableObj.onDestroy) {\n            observableObj.onDestroy(function () {\n                objectKeys(watched).forEach(function (propName) {\n                    watched[propName].destroy();\n\n                    // FIXME remove property getter/setter on the object (if still there)\n\n                    delete watched[propName];\n                });\n\n                delete instData.watched;\n                __WEBPACK_IMPORTED_MODULE_5__common__[\"d\" /* PRIVATE */].delete(observableObj);\n                instData.destroy();\n            }.bind(observableObj));\n        }\n    }\n    return __WEBPACK_IMPORTED_MODULE_5__common__[\"d\" /* PRIVATE */].get(observableObj);\n}\n\n/**\r\n * A property setup\r\n *\r\n * @private\r\n * @class Observable~PropertySetup\r\n * @extends Compose\r\n */\nvar PropertySetup = __WEBPACK_IMPORTED_MODULE_0_common_micro_libs_src_jsutils_Compose__[\"a\" /* default */].extend( /** @lends Observable~PropertySetup.prototype */{\n    init: function init(observable, propName) {\n        var _this = this;\n\n        this.dependees = new __WEBPACK_IMPORTED_MODULE_4_common_micro_libs_src_jsutils_es6_Set__[\"a\" /* default */]();\n        this.propName = propName;\n        this._obj = observable;\n\n        this.onDestroy(function () {\n            _this.dependees.clear();\n            if (_this.rmDepEvListener) {\n                _this.rmDepEvListener.off();\n            }\n            _this._obj = null;\n        });\n    },\n\n\n    propName: \"\",\n\n    /** @type Array */\n    dependees: null,\n\n    oldVal: null,\n\n    newVal: null,\n\n    queued: false,\n\n    isComputed: false,\n\n    /**\r\n     * Notifies everyone that is listening for events on this property\r\n     *\r\n     * @param [noDelay=false]\r\n     */\n    notify: function notify(noDelay) {\n        var _this2 = this;\n\n        var propSetup = this;\n\n        // Queue up calling all dependee notifiers\n        this.dependees.forEach(function (cb) {\n            return Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"k\" /* queueDependeeNotifier */])(cb);\n        });\n\n        // If emitting of events for this property was already queued, exit\n        if (propSetup.queued) {\n            return;\n        }\n\n        propSetup.queued = true;\n\n        if (noDelay) {\n            this._emit();\n            return;\n        }\n\n        Object(__WEBPACK_IMPORTED_MODULE_3_common_micro_libs_src_jsutils_nextTick__[\"a\" /* default */])(function () {\n            return _this2._emit();\n        });\n    },\n    _emit: function _emit() {\n        this.queued = false;\n        getInstance(this._obj).emit(this.propName, this.newVal, this.oldVal);\n        this.oldVal = null;\n    },\n\n\n    /**\r\n     * Removes a callback from the list of dependees\r\n     * @param {Function} cb\r\n     */\n    removeDependee: function removeDependee(cb) {\n        this.dependees.delete(cb);\n        // Remove listener if no dependees\n        if (this.rmDepEvListener && this.dependees.size === 0) {\n            this.rmDepEvListener.off();\n            this.rmDepEvListener = null;\n        }\n    },\n\n\n    /**\r\n     * Stores global dependees into this Property list of dependees\r\n     */\n    storeDependees: function storeDependees() {\n        Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"o\" /* storeDependeeNotifiers */])(this.dependees);\n\n        // If we have dependees, then setup an internal event bus listener\n        if (this.dependees.size > 0 && !this.rmDepEvListener) {\n            this.rmDepEvListener = Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"j\" /* onInternalEvent */])(__WEBPACK_IMPORTED_MODULE_5__common__[\"a\" /* EV_STOP_DEPENDEE_NOTIFICATION */], this.removeDependee.bind(this));\n        }\n    }\n});\n\n/**\r\n * Checks to see if a given property on this object already has a watcher\r\n * and if not, it sets one up for it.\r\n *\r\n * @private\r\n * @param {ObservableObject} observable\r\n * @param {String} propName\r\n * @param {Function} [valueGetter]\r\n * @param {Function} [valueSetter]\r\n * @param {Boolean} [enumerable=true]\r\n *\r\n * @return {EventEmitter}\r\n */\nfunction makePropWatchable(observable, propName, valueGetter, valueSetter) {\n    var enumerable = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n\n    var inst = getInstance(observable);\n    var watched = inst.watched;\n\n    if (watched[propName]) {\n        return inst;\n    }\n\n    var currentValue = void 0;\n    var emitNotification = !(propName in observable);\n    var propDescriptor = Object.getOwnPropertyDescriptor(observable, propName);\n\n    if (propDescriptor) {\n        if (propDescriptor.configurable === false) {\n            // TODO: should we throw()?\n            return;\n        }\n\n        valueGetter = valueGetter || propDescriptor.get;\n        valueSetter = valueSetter || propDescriptor.set;\n\n        if (!valueGetter) {\n            currentValue = propDescriptor.value;\n        }\n    }\n\n    // if we're able to remove the current property (ex. Constants would fail),\n    // then change this attribute to be watched\n    if (delete observable[propName]) {\n        var propSetup = watched[propName] = PropertySetup.create(observable, propName);\n\n        propSetup.oldVal = propSetup.newVal = currentValue;\n\n        objectDefineProperty(observable, propName, {\n            enumerable: enumerable,\n            configurable: true,\n\n            // Getter will either delegate to the prior getter(),\n            // or return the value that was originally assigned to the property\n            get: function get() {\n                propSetup.storeDependees();\n                return valueGetter ? valueGetter() : propSetup.newVal;\n            },\n\n            // Setter is how we detect changes to the value.\n            set: function set(newValue) {\n                if (propSetup.isComputed) {\n                    return; // TODO: should throw? or console.warn  ?\n                }\n\n                var oldValue = valueGetter ? valueGetter() : propSetup.newVal;\n\n                if (valueSetter) {\n                    newValue = valueSetter.call(observable, newValue);\n                } else {\n                    propSetup.oldVal = oldValue;\n                    propSetup.newVal = newValue;\n                }\n\n                // Dirty checking...\n                // Only trigger if values are different. Also, only add a trigger\n                // if one is not already queued.\n                if (newValue !== oldValue) {\n                    if (inst.opt.deep && newValue && Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"i\" /* isPureObject */])(newValue)) {\n                        makeObservable(newValue, null, true);\n                    }\n\n                    propSetup.notify();\n                }\n            }\n        });\n    } else {\n        console.log(new Error(\"Unable to watch property [\" + propName + \"] - delete failed\"));\n    }\n\n    if (emitNotification) {\n        inst.notify();\n    }\n\n    return inst;\n}\n\n/**\r\n * Created a computed property on a given object\r\n *\r\n * @param {Object} observable\r\n * @param {String} propName\r\n * @param {Function} valueGenerator\r\n * @param {Boolean} [enumerable=true]\r\n */\nfunction createComputedProp(observable, propName, valueGenerator) {\n    var enumerable = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n    if (observable && propName && valueGenerator) {\n        var runValueGenerator = true;\n        var propValue = void 0;\n        var dependencyChangeNotifier = function dependencyChangeNotifier() {\n            // Trigger the Object property setter(). This does nothing as far as the\n            // computed value does, but provides compatibility for any code that\n            // might have overwritten the setter in order ot also listen for changes\n            // outside of this lib.\n            observable[propName] = \"\";\n\n            // Reset the internally cached prop value and set the flag to run the\n            // generator and then notify listeners.\n            propValue = null;\n            runValueGenerator = true;\n            getInstance(observable).watched[propName].notify();\n        };\n        var valueGetter = function valueGetter() {\n            // FIXME: should we detect circular loops?\n\n            if (!runValueGenerator) {\n                return propValue;\n            }\n\n            Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"l\" /* setDependencyTracker */])(dependencyChangeNotifier);\n\n            try {\n                propValue = valueGenerator.call(observable);\n            } catch (e) {\n                Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"p\" /* unsetDependencyTracker */])(dependencyChangeNotifier);\n                throw e;\n            }\n\n            Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"p\" /* unsetDependencyTracker */])(dependencyChangeNotifier);\n            runValueGenerator = false;\n            return propValue;\n        };\n        var valueSetter = function valueSetter() {\n            /* FIXME: should this anything? */\n            return propValue;\n        };\n        var inst = getInstance(observable);\n\n        dependencyChangeNotifier[__WEBPACK_IMPORTED_MODULE_5__common__[\"b\" /* IS_COMPUTED_NOTIFIER */]] = true;\n\n        // If this propName is already being watched, then first destroy that instance\n        if (propName in inst.watched) {\n            inst.watched[propName].destroy();\n            delete inst.watched[propName];\n        }\n\n        makePropWatchable(observable, propName, valueGetter, valueSetter, enumerable);\n\n        inst.watched[propName].isComputed = true;\n        inst.watched[propName].onDestroy(function () {\n            Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"n\" /* stopDependeeNotifications */])(dependencyChangeNotifier);\n            delete inst.watched[propName];\n            delete observable[propName];\n            observable[propName] = propValue;\n        });\n\n        return Object.create({\n            destroy: function destroy() {\n                if (inst.watched[propName]) {\n                    inst.watched[propName].destroy(true);\n                }\n            }\n        });\n    }\n}\n\n/**\r\n * Assign the properties of one (or more) objects to the observable and\r\n * makes those properties \"watchable\"\r\n *\r\n * @param {Object} observable\r\n * @param {...Object} objs\r\n *\r\n * @return {Object} observable\r\n */\nfunction observableAssign(observable) {\n    for (var _len2 = arguments.length, objs = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        objs[_key2 - 1] = arguments[_key2];\n    }\n\n    if (objs.length) {\n        Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"e\" /* arrayForEach */])(objs, function (obj) {\n            Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"e\" /* arrayForEach */])(objectKeys(obj), function (key) {\n                makePropWatchable(observable, key);\n                observable[key] = obj[key];\n            });\n        });\n    }\n    return observable;\n}\n\n/**\r\n * Makes an Object observable or a given property of the object observable.\r\n *\r\n * @param {Object} observable\r\n *  The object that should be made observable.\r\n *\r\n * @param {String} [propName]\r\n *  if left unset, then all existing `own properties` of the object will\r\n *  be made observable.\r\n *\r\n * @param {Boolean} [deep=false]\r\n *  If set to `true` then the object, or the value the given `prop` (if defined)\r\n *  will be \"walked\" and any object found made an observable as well.\r\n *\r\n * @param {Function} [onEach]\r\n *  A callback function to be called as each property is \"walked\". The property value\r\n *  is provided on input to the callback\r\n */\nfunction makeObservable(observable, propName, deep, onEach) {\n    if (observable) {\n        if (propName) {\n            makePropWatchable(observable, propName);\n        } else {\n            Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"e\" /* arrayForEach */])(objectKeys(observable), function (prop) {\n                return makePropWatchable(observable, prop);\n            });\n        }\n\n        if (deep) {\n            Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"e\" /* arrayForEach */])(objectKeys(observable), function (key) {\n                if (observable[key] && Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"i\" /* isPureObject */])(observable[key])) {\n                    makeObservable(observable[key], null, deep, onEach);\n                }\n\n                if (onEach) {\n                    onEach(observable[key]);\n                }\n            });\n        }\n    }\n}\n\n/**\r\n * Watch a given object property for changes.\r\n *\r\n * @param {Object} observable\r\n * @param {String} propName\r\n *  The `observable` property name or, if wanting to list to all property changes,\r\n *  the actual `observable` instance\r\n * @param {Function} notifier\r\n *\r\n * @returns {EventEmitter#EventListener}\r\n */\nfunction watchProp(observable, propName, notifier) {\n    var inst = getInstance(observable);\n\n    if (propName === observable) {\n        return inst.on(inst, notifier);\n    } else if (objectHasOwnProperty(observable, propName)) {\n        makePropWatchable(observable, propName);\n        return inst.on(propName, notifier);\n    } else {\n        return noopEventListener;\n    }\n}\n\n/**\r\n * Watch for changes on a given object property only once\r\n * (automatically stops listening after the first invocation).\r\n *\r\n * @param {Object} observable\r\n * @param {String} propName\r\n * @param {Function} notifier\r\n * @returns {EventEmitter#EventListener}\r\n */\nfunction watchPropOnce(observable, propName, notifier) {\n    var inst = getInstance(observable);\n\n    if (propName === observable) {\n        return inst.once(inst, notifier);\n    } else if (objectHasOwnProperty(observable, propName)) {\n        makePropWatchable(observable, propName);\n        return inst.once(propName, notifier);\n    } else {\n        return noopEventListener;\n    }\n}\n\n/**\r\n * Stop watching an object property.\r\n *\r\n * @param {Object} observable\r\n * @param {String} propName\r\n * @param {Function} notifier\r\n */\nfunction unwatchProp(observable, propName, notifier) {\n    return getInstance(observable).off(propName, notifier);\n}\n\n/**\r\n * Notifies watchers of a given Observable property\r\n *\r\n * @param {Object} observable\r\n * @param {String} propName\r\n */\nfunction notifyPropWatchers(observable, propName) {\n    var watched = getInstance(observable).watched;\n    if (watched[propName]) {\n        watched[propName].notify(true);\n    }\n}\n\n/**\r\n * Adds ObservableObject capabilities to an object.\r\n *\r\n * @method ObservableObject.mixin\r\n *\r\n * @param {Object} observable\r\n *\r\n * @return {Object}\r\n *  Same object that was given on input will be returned\r\n */\nfunction observableMixin(observable) {\n    if (observable) {\n        Object(__WEBPACK_IMPORTED_MODULE_5__common__[\"e\" /* arrayForEach */])(objectKeys(ObservableObject.prototype), function (method) {\n            if (!(method in observable) || observable[method] !== ObservableObject.prototype[method]) {\n                objectDefineProperty(observable, method, {\n                    value: ObservableObject.prototype[method],\n                    enumerable: false,\n                    configurable: true\n                });\n            }\n        });\n    }\n    return observable;\n}\n\nObservableObject.createComputed = createComputedProp;\nObservableObject.mixin = observableMixin;\n\n/**\r\n * Default options to the ObservableObject constructor\r\n *\r\n * @type Object\r\n * @name ObservableObject.defaults\r\n */\nObservableObject.defaults = {\n    watchAll: true,\n    deep: true\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ObservableObject);\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// ObservableData.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5ac20af838a1d216ca79","import Compose from \"./Compose\";\r\nimport dataStore from \"./dataStore\";\r\nimport Set from \"./es6-Set\";\r\n\r\n//----------------------------------------------------------------\r\nconst PRIVATE           = dataStore.create();\r\nconst arraySlice        = Function.call.bind(Array.prototype.slice);\r\nconst isFunction        = function(fn){return typeof fn === \"function\";};\r\nconst objectKeys        = Object.keys;\r\n\r\n/**\r\n * Emits events. Use it to extend other modules and thus add events to them.\r\n *\r\n * @class EventEmitter\r\n * @extends Compose\r\n */\r\nconst EventEmitter = Compose.extend(/** @lends EventEmitter.prototype */{\r\n    /**\r\n     * Add a callback to a given event name\r\n     *\r\n     * @param {String} evName\r\n     *  The event name to be listened to or a list of event sperated by a space.\r\n     *  The EventEmitter instance can be used as the `evName` as well which will\r\n     *  essentially listen to all events.\r\n     *  Note that this special event however, will change the arguments\r\n     *  passed to the callback by pre-pending the Event Name (`String`) and\r\n     *  appending the Component instance.\r\n     *\r\n     * @param {Function} callback\r\n     *  A callback function to listen to the event. The callback function\r\n     *  can cancel any queued event callbacks by returning `true` (boolean).\r\n     *\r\n     * @return {EventEmitter#EventListener}\r\n     *\r\n     * @example\r\n     *\r\n     * events.on(\"some-event\", (...args) => {});\r\n     *\r\n     * // List to all events\r\n     * events.on(events, (evNameTriggered, ...args) => {}\r\n     */\r\n    on: function(evName, callback){\r\n        let { all, listeners }  = getSetup.call(this);\r\n        let events              = getEventNameList(evName).reduce((eventList, eventName) => {\r\n            let off;\r\n\r\n            // If eventName is `this` then listen to all events\r\n            if (eventName === this) {\r\n                all.add(callback);\r\n                off = () => all.delete(callback);\r\n            }\r\n            else {\r\n                if (!(eventName in listeners)) {\r\n                    listeners[eventName] = new Set();\r\n                }\r\n\r\n                listeners[eventName].add(callback);\r\n                off = () => listeners[eventName].delete(callback);\r\n            }\r\n\r\n            eventList[eventName] = { off };\r\n            return eventList;\r\n        }, {});\r\n        /**\r\n         * EventEmitter Listener object, returned when one of the listener setter methods\r\n         * (ex. `on()`, `once()`, `pipe`) are used.\r\n         *\r\n         * @typedef {Object} EventEmitter~EventListener\r\n         *\r\n         * @property {Object} listeners\r\n         *  An object with the individual listeners. Each respective event listener\r\n         *  has an `off()` method to turn that listener off.\r\n         *\r\n         * @property {Function} off\r\n         *  Remove callback from event.\r\n         */\r\n        let response = {\r\n            off: function(){\r\n                objectKeys(events).forEach(eventName => events[eventName].off());\r\n            }\r\n        };\r\n\r\n        response.listeners = events;\r\n        return response;\r\n    },\r\n\r\n    /**\r\n     * Remove a callback from a given event\r\n     *\r\n     * @param {String} evName\r\n     * @param {Function} callback\r\n     *\r\n     */\r\n    off: function(evName, callback){\r\n        const { all, listeners } = getSetup.call(this);\r\n\r\n        if (evName === this) {\r\n            all.delete(callback);\r\n            return;\r\n        }\r\n\r\n        if (listeners[evName]) {\r\n            listeners.delete(callback);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Add a callback to a given event name that is executed only once.\r\n     *\r\n     * @param {String} evName\r\n     *  The event name. This can be a list of event delimited with a space. Each\r\n     *  event listeners will be triggered at most once.\r\n     * @param {Function} callback\r\n     *\r\n     * @return {EventEmitter#EventListener}\r\n     */\r\n    once: function(evName, callback){\r\n        let events = getEventNameList(evName).reduce((eventListeners, eventName) => {\r\n            let eventNameListener = this.on(evName, function(...args){\r\n                eventNameListener.off();\r\n                callback(...args);\r\n            });\r\n\r\n            eventListeners[eventName] = eventNameListener;\r\n            return eventListeners;\r\n        }, {});\r\n\r\n        let response = {\r\n            off: function(){\r\n                objectKeys(events).forEach(eventName => events[eventName].off());\r\n            }\r\n        };\r\n\r\n        response.listeners = events;\r\n        return response;\r\n    },\r\n\r\n    /**\r\n     * Emit an event and execute any callback listening. Any of the listening\r\n     * events can cancel the calling of queued callbacks by returning `true`\r\n     * (boolean)\r\n     *\r\n     * @param {String} evName\r\n     *  The event name to be triggered. __NOTE__: can not be a `\"*\"` or the EventEmitter\r\n     *  instance since they holds special meaning.\r\n     *\r\n     * @param {...*} callbackArgs\r\n     */\r\n    emit: function(evName){\r\n        if (evName === \"*\" || evName === this) {\r\n            console.log(\"EventEmitter#emit(): can not emit to events to '*'\"); // jshint ignore:line\r\n            return;\r\n        }\r\n\r\n        let setup           = getSetup.call(this);\r\n        let eventListeners  = setup.listeners;\r\n        let eventPipes      = setup.pipes;\r\n        let eventAll        = setup.all;\r\n        let args            = arraySlice(arguments, 1);\r\n        let isCanceled      = false;\r\n        let callbackHandler = function(callback){\r\n            if (isFunction(callback)) {\r\n                var response = callback.apply(callback, args);\r\n\r\n                // if a boolean true was returned, don't call any more listeners.\r\n                if (response === true) {\r\n                    isCanceled = true;\r\n                    return true;\r\n                }\r\n            }\r\n        };\r\n\r\n        // Regular event listeners\r\n        if (eventListeners[evName] && eventListeners[evName].size) {\r\n            for (let cb of eventListeners[evName]) {\r\n                if (callbackHandler(cb)) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Event listeners for all events\r\n        if (\r\n            !isCanceled &&\r\n            (\r\n                \"*\" in eventListeners ||\r\n                eventAll.size\r\n            )\r\n        ) {\r\n            // Special event \"*\": pass event name and instance\r\n            args = arraySlice(arguments, 0);\r\n            args.push(this);\r\n\r\n            if (eventListeners[\"*\"] && eventListeners[\"*\"].size) {\r\n                for (let cb of eventListeners[\"*\"]) {\r\n                    if (callbackHandler(cb)) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (eventAll.size) {\r\n                for (let cb of eventAll) {\r\n                    if (callbackHandler(cb)) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // set args back to original\r\n            args = arraySlice(arguments, 1);\r\n        }\r\n\r\n        if (eventPipes.size) {\r\n            for (let pipe of eventPipes) {\r\n                pipe && pipe(evName, args);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Emit the events from one instance of EventEmitter to another. Useful\r\n     * for when multiple components are used together as part of a larger\r\n     * component and have the need to emit events to a common EventEmitter.\r\n     *\r\n     * @param {EventEmitter} pipeTo\r\n     *  The EventEmitter instance object to where events should be piped.\r\n     *  Can also be an object/class having an `emit(evName, data)` method.\r\n     *\r\n     * @param {String} [prefix]\r\n     *  If defined, prefix will be added to any event emited. Example:\r\n     *  if defining `foo-` as the prefix, then every event emitted will\r\n     *  prefixed wth this value. So a `click` event on the source will\r\n     *  be piped as `foo-click`.\r\n     *\r\n     * @param {Boolean} [includeInstance=true]\r\n     *  When set to `true` (default), the piped event will include the source\r\n     *  instance as an additional argument to the event that is piped.\r\n     *\r\n     *  @return {EventListener}\r\n     */\r\n    pipe: function(pipeTo, prefix, includeInstance){\r\n        if (!pipeTo || !pipeTo.emit) {\r\n            return { off: function(){} };\r\n        }\r\n\r\n        const pipes = getSetup.call(this).pipes;\r\n\r\n        const pipeEvToReceiver = (triggeredEvName, args) => {\r\n            if (prefix) {\r\n                args.unshift(prefix + triggeredEvName);\r\n\r\n            } else {\r\n                args.unshift(triggeredEvName);\r\n            }\r\n\r\n            if (includeInstance || typeof includeInstance === \"undefined\") {\r\n                args.push(this);\r\n            }\r\n\r\n            pipeTo.emit.apply(pipeTo, args);\r\n        };\r\n\r\n        pipes.add(pipeEvToReceiver);\r\n\r\n        return {\r\n            off() {\r\n                pipes.delete(pipeEvToReceiver);\r\n            }\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Returns a boolean indicating if the current EventEmitter has listener\r\n     * @returns {Boolean}\r\n     */\r\n    hasListeners() {\r\n        const { listeners, pipes } = getSetup.call(this);\r\n        return objectKeys(listeners).some(evName => !!listeners[evName].size) || !!pipes.size;\r\n    },\r\n\r\n    destroy() {\r\n        Compose.prototype.destroy.call(this, true); // destroy now!\r\n    }\r\n});\r\n\r\n/**\r\n * Returns the instance setup object. Creates it if it does not have one.\r\n * @private\r\n * @this EventEmitter\r\n */\r\nfunction getSetup(){\r\n    if (!PRIVATE.has(this)) {\r\n        /*\r\n            listeners: {\r\n                'evName': Set[ Callbacks ]\r\n            },\r\n            pipes: Set[ Callbacks ]\r\n            all: Set[ Callbacks ]\r\n        */\r\n        PRIVATE.set(this, {\r\n            listeners:  {},\r\n            pipes:      new Set(),\r\n            all:        new Set()\r\n        });\r\n\r\n        // When this object is destroyed, remove all data\r\n        if (this.onDestroy) {\r\n            this.onDestroy(function(){\r\n                if (PRIVATE.has(this)) {\r\n                    PRIVATE['delete'](this); // using ['delete'] because of IE\r\n                }\r\n            }.bind(this));\r\n        }\r\n    }\r\n    return PRIVATE.get(this);\r\n}\r\n\r\nfunction getEventNameList(eventNamesStr) {\r\n    if (\"string\" === typeof eventNamesStr) {\r\n        return eventNamesStr.split(/\\s+/);\r\n    }\r\n    return [eventNamesStr];\r\n}\r\n\r\n/**\r\n * Adds event emitter functionality to an object\r\n *\r\n * @param {Object} target\r\n */\r\nEventEmitter.mixin = function (target) {\r\n    if (target) {\r\n        [\"on\", \"off\", \"emit\", \"once\", \"pipe\"].forEach(method => {\r\n            Object.defineProperty(target, method, {\r\n                configurable: true,\r\n                value: EventEmitter.prototype[method].bind(target)\r\n            });\r\n        });\r\n    }\r\n};\r\n\r\nexport default EventEmitter;\r\nexport { EventEmitter };\r\n\n\n\n// WEBPACK FOOTER //\n// ./../common-micro-libs/src/jsutils/EventEmitter.js","// POLYFILL FOR WEAKMAP\r\n//  [pt] changed how \"delete\" is defined so that it can work in IE8\r\n\r\n/* jshint ignore:start */\r\n/**\r\n * @license\r\n * Copyright (c) 2014 The Polymer Project Authors. All rights reserved.\r\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\r\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\r\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\r\n * Code distributed by Google as part of the polymer project is also\r\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\r\n */\r\nif (typeof WeakMap === 'undefined') {\r\n  (function() {\r\n    var defineProperty = Object.defineProperty;\r\n    var counter = Date.now() % 1e9;\r\n\r\n    var WeakMap = function() {\r\n      this.name = '__st' + (Math.random() * 1e9 >>> 0) + (counter++ + '__');\r\n    };\r\n\r\n    WeakMap.prototype = {\r\n      set: function(key, value) {\r\n        var entry = key[this.name];\r\n        if (entry && entry[0] === key)\r\n          entry[1] = value;\r\n        else\r\n          defineProperty(key, this.name, {value: [key, value], writable: true});\r\n        return this;\r\n      },\r\n      get: function(key) {\r\n        var entry;\r\n        return (entry = key[this.name]) && entry[0] === key ?\r\n            entry[1] : undefined;\r\n      },\r\n      // [pt] Quotes around the delete property needed for IE8\r\n      \"delete\": function(key) {\r\n        var entry = key[this.name];\r\n        if (!entry || entry[0] !== key) return false;\r\n        entry[0] = entry[1] = undefined;\r\n        return true;\r\n      },\r\n      has: function(key) {\r\n        var entry = key[this.name];\r\n        if (!entry) return false;\r\n        return entry[0] === key;\r\n      }\r\n    };\r\n\r\n    window.WeakMap = WeakMap;\r\n  })();\r\n}\r\n/* jshint ignore:end */\r\n\r\n/**\r\n * Returns an object that contains an initialized WeakMap (`stash` property)\r\n * where data can be stored.\r\n *\r\n * @namespace dataStore\r\n *\r\n */\r\nvar dataStore = /** @lends dataStore */{\r\n    /**\r\n     * Stash data here.\r\n     * @type WeakMap\r\n     */\r\n    stash:  new WeakMap(),\r\n    /**\r\n     * Create a private data store and return it.\r\n     * @return {WeakMap}\r\n     */\r\n    create: function(){\r\n        return new WeakMap();\r\n    }\r\n};\r\n\r\nexport default dataStore;\r\nexport { dataStore };\r\n\n\n\n// WEBPACK FOOTER //\n// ./../common-micro-libs/src/jsutils/dataStore.js","let reIsNativeCode = /native code/i;\r\n\r\n/**\r\n * Executes a function at the end of the current event Loop - during micro-task processing\r\n *\r\n * @param {Function} callback\r\n */\r\nlet nextTick = (function(){\r\n    if (typeof setImediate !== \"undefined\" && reIsNativeCode.test(setImediate.toString())) {\r\n        return setImediate;\r\n    }\r\n\r\n    // Native Promsie? Use it.\r\n    if (typeof Promise === 'function' && reIsNativeCode.test(Promise.toString())) {\r\n        let resolved = Promise.resolve();\r\n        return function _nextTick(fn) {\r\n            resolved.then(fn).catch(e => console.log(e));\r\n        };\r\n    }\r\n\r\n    // fallback to setTimeout\r\n    // From: https://bugzilla.mozilla.org/show_bug.cgi?id=686201#c68\r\n    let immediates = [];\r\n    let processing = false;\r\n\r\n    function processPending() {\r\n        setTimeout(function() {\r\n            immediates.shift()();\r\n            if (immediates.length) {\r\n                processPending();\r\n\r\n            } else {\r\n                processing = false;\r\n            }\r\n        }, 0);\r\n    }\r\n\r\n    return function _nextTick(fn) {\r\n        immediates.push(fn);\r\n        if (!processing) {\r\n            processing = true;\r\n            processPending();\r\n        }\r\n    };\r\n})();\r\n\r\nexport default nextTick;\r\nexport { nextTick };\r\n\n\n\n// WEBPACK FOOTER //\n// ./../common-micro-libs/src/jsutils/nextTick.js","import EventEmitter     from \"common-micro-libs/src/jsutils/EventEmitter\"\r\nimport nextTick         from \"common-micro-libs/src/jsutils/nextTick\"\r\nimport dataStore        from \"common-micro-libs/src/jsutils/dataStore\"\r\nimport Set              from \"common-micro-libs/src/jsutils/es6-Set\"\r\n\r\n//=======================================================================\r\nconst NOOP              = () => {};\r\n\r\nexport const PRIVATE                        = dataStore.create();\r\nexport const INTERNAL_EVENTS                = EventEmitter.create();\r\nexport const EV_STOP_DEPENDEE_NOTIFICATION  = \"1\";\r\nexport const ARRAY_PROTOTYPE                = Array.prototype;\r\nexport const OBJECT_PROTOTYPE               = Object.prototype;\r\nexport const IS_COMPUTED_NOTIFIER           = \"__od_cn__\";\r\nexport const OBSERVABLE_FLAG                = \"___observable_data___\";\r\n\r\nexport const bindCallTo         = Function.call.bind.bind(Function.call);\r\nexport const dependeeList       = new Set();\r\nexport const onInternalEvent    = INTERNAL_EVENTS.on.bind(INTERNAL_EVENTS);\r\nexport const emitInternalEvent  = INTERNAL_EVENTS.emit.bind(INTERNAL_EVENTS);\r\nexport const isArray            = Array.isArray;\r\nexport const arrayIndexOf       = bindCallTo(ARRAY_PROTOTYPE.indexOf);\r\nexport const arraySplice        = bindCallTo(ARRAY_PROTOTYPE.splice);\r\nexport const arrayForEach       = bindCallTo(ARRAY_PROTOTYPE.forEach);\r\nexport const isPureObject       = obj => obj && OBJECT_PROTOTYPE.toString.call(obj) === \"[object Object]\";\r\nexport const isObservable       = obj => obj && obj[OBSERVABLE_FLAG] === NOOP;\r\nexport const setObservableFlag  = obj => obj && Object.defineProperty(obj, OBSERVABLE_FLAG, { get: () => NOOP });\r\n\r\n/**\r\n * Allows for adding a Dependee notifier to the global list of dependency trackers.\r\n *\r\n * @param {Function} dependeeNotifier\r\n */\r\nexport function setDependencyTracker(dependeeNotifier) {\r\n    if (dependeeNotifier) {\r\n        dependeeList.add(dependeeNotifier);\r\n    }\r\n}\r\n\r\n/**\r\n * Removes a Dependee notifier from the global list of dependency trackers.\r\n *\r\n * @param {Function} dependeeNotifier\r\n */\r\nexport function unsetDependencyTracker(dependeeNotifier) {\r\n    if (!dependeeNotifier) {\r\n        return;\r\n    }\r\n    dependeeList.delete(dependeeNotifier);\r\n}\r\n\r\n/**\r\n * Removes a Dependee notifier from any stored ObservableProperty list of dependees, thus\r\n * stopping all notifications to that depenedee.\r\n *\r\n * @param {Function} dependeeNotifier\r\n */\r\nexport function stopDependeeNotifications(dependeeNotifier) {\r\n    if (dependeeNotifier) {\r\n        emitInternalEvent(EV_STOP_DEPENDEE_NOTIFICATION, dependeeNotifier);\r\n    }\r\n}\r\n\r\n\r\nexport const queueDependeeNotifier = (() => {\r\n    const dependeeNotifiers = new Set();\r\n    const execNotifiers     = () => {\r\n        dependeeNotifiers.forEach(notifierCb => notifierCb());\r\n        dependeeNotifiers.clear();\r\n    };\r\n\r\n    return notifierCb => {\r\n        // Computed property notifiers are lightweight, so execute\r\n        // these now and don't queue them.\r\n        if (notifierCb[IS_COMPUTED_NOTIFIER]) {\r\n            notifierCb();\r\n            return;\r\n        }\r\n\r\n        if (!notifierCb || dependeeNotifiers.has(notifierCb)) {\r\n            return;\r\n        }\r\n\r\n        const callNextTick = !dependeeNotifiers.size;\r\n        dependeeNotifiers.add(notifierCb);\r\n\r\n        if (callNextTick) {\r\n            nextTick(execNotifiers);\r\n        }\r\n    };\r\n})();\r\n\r\n\r\nexport function storeDependeeNotifiers (store) {\r\n    if (store && dependeeList.size) {\r\n        dependeeList.forEach(dependeeCallback => store.add(dependeeCallback));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/common.js","import objectExtend     from \"./objectExtend\"\r\nimport dataStore        from \"./dataStore\"\r\nimport queueCallback    from \"./queueCallback\"\r\n\r\n//=========================================================\r\nconst PRIVATE = dataStore.create();\r\nconst COMMON_DESTROY_METHOD_NAME = [\r\n    \"destroy\",      // Compose\r\n    \"remove\",       // DOM Events Listeners\r\n    \"off\"           // EventEmitter Listeners\r\n];\r\n\r\n// Aliases\r\nconst objectCreate = Object.create;\r\n\r\n\r\n// return all KEYs of an object, even those that are not iterable\r\nfunction objectKeys(prototype){\r\n    let k, keys = [];\r\n    for (k in prototype){\r\n        keys.push(k);\r\n    }\r\n    return keys;\r\n}\r\n\r\n// Base instance methods for Compose'd object\r\nconst baseMethods = /** @lends Compose.prototype */{\r\n\r\n    /**\r\n     * Property indicating whether instance has been destroyed\r\n     */\r\n    isDestroyed: false,\r\n\r\n    /**\r\n     * instance initializing code\r\n     */\r\n    init(){},\r\n\r\n    /**\r\n     * Destroys the instance, by removing its private data.\r\n     * Any attached `onDestroy` callback will be executed `async` - queued and\r\n     * called on next event loop\r\n     *\r\n     * @param {Boolean} [executeCallbacksNow=false]\r\n     */\r\n    destroy(executeCallbacksNow){\r\n        if (PRIVATE.has(this)) {\r\n            let destroyCallbacks = PRIVATE.get(this);\r\n            PRIVATE.delete(this);\r\n\r\n            if (executeCallbacksNow) {\r\n                destroyCallbacks.forEach(callOnDestroyCallback);\r\n            }\r\n            else {\r\n                queueCallback(() => destroyCallbacks.forEach(callOnDestroyCallback));\r\n            }\r\n        }\r\n\r\n        if (\"boolean\" === typeof this.isDestroyed) {\r\n            this.isDestroyed = true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a callback to the queue to be called when this object's `.destroy()`\r\n     * is called.\r\n     *\r\n     * @param {Function} callback\r\n     */\r\n    onDestroy(callback){\r\n        getInstanceState(this).push(callback);\r\n    },\r\n\r\n    /**\r\n     * Returns the factory for this instance.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    getFactory(){\r\n        if (this.constructor) {\r\n            return this.constructor;\r\n        }\r\n    }\r\n};\r\n\r\n\r\nconst staticMethods = /** @lends Compose */{\r\n    /**\r\n     * Creates an new factory based on the prototye of the current Factory\r\n     * and any other Factory given on input.\r\n     *\r\n     * @return {Compose}\r\n     */\r\n    extend: function(...args){\r\n        let Class = class extends this {};\r\n\r\n        objectExtend(Class.prototype, args.reduce(function(newProto, obj){\r\n            if (obj) {\r\n                const thisObjProto = (obj.prototype || obj);\r\n                objectKeys(thisObjProto).forEach(function(objKey){\r\n                    newProto[objKey] = thisObjProto[objKey];\r\n                });\r\n            }\r\n            return newProto;\r\n        }, {}));\r\n\r\n        return Class;\r\n    },\r\n\r\n    /**\r\n     * Checks if the Object given on input looks like an instance of this Factory.\r\n     *\r\n     * @return {Boolean}\r\n     */\r\n    isInstanceOf: function(instanceObj){\r\n\r\n        if (!instanceObj) {\r\n            return false;\r\n        }\r\n\r\n        var neededKeys = objectKeys(this.prototype);\r\n\r\n        // If any prototype key is not in the object prototype, then return false\r\n        return !neededKeys.some(function(protoKey){\r\n            return typeof instanceObj[protoKey] === \"undefined\";\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Creates an instance object based on this factory.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    create: function(){\r\n        return new this(...arguments);\r\n    },\r\n\r\n    /**\r\n     * Returns a standard callback that can be used to remove cleanup instance state\r\n     * from specific Store (WeakMap). Returned function will destroy known Instances\r\n     * that have destroy methods.\r\n     *\r\n     * @param {Object} instanceState\r\n     * @param {WeakMap} [stateStore]\r\n     *\r\n     * @return {Function}\r\n     *\r\n     * @example\r\n     *\r\n     * const MY_PRIVATE = new WeakMap();\r\n     * cont NewWdg = Componse.extend({\r\n     *      init() {\r\n     *          const state = {};\r\n     *          MY_PRIVATE.set(this, state);\r\n     *          ...\r\n     *\r\n     *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n     *      }\r\n     * });\r\n     */\r\n    getDestroyCallback: getDestroyCallback\r\n};\r\n\r\n\r\n/**\r\n * Returns a standard callback that can be used to remove cleanup instance state\r\n * from specific Store (WeakMap). Returned function will destroy known Instances\r\n * that have destroy methods.\r\n *\r\n * @method Compose~getDestroyCallback\r\n *\r\n * @param {Object} instanceState\r\n * @param {WeakMap} [stateStore]\r\n *\r\n * @return {Function}\r\n *\r\n * @example\r\n *\r\n * const MY_PRIVATE = new WeakMap();\r\n * cont NewWdg = Componse.extend({\r\n *      init() {\r\n *          const state = {};\r\n *          MY_PRIVATE.set(this, state);\r\n *          ...\r\n *\r\n *          this.onDestroy(Compose.getDestroyCallback(state, MY_PRIVATE));\r\n *      }\r\n * });\r\n */\r\nexport function getDestroyCallback (instanceState, stateStore) {\r\n    return () => {\r\n        if (instanceState) {\r\n            // Destroy all Compose object\r\n            Object.keys(instanceState).forEach(function (prop) {\r\n                if (instanceState[prop]) {\r\n                    COMMON_DESTROY_METHOD_NAME.some((method) => {\r\n                        if (\r\n                            instanceState[prop][method] &&\r\n                            (method !== \"remove\" || !(instanceState[prop] instanceof Node)) // Caution: should not remove DOM elements.\r\n                        ) {\r\n                            instanceState[prop][method]();\r\n                            return true;\r\n                        }\r\n                    });\r\n\r\n                    instanceState[prop] = undefined;\r\n                }\r\n            });\r\n        }\r\n\r\n        if (stateStore && stateStore.has && stateStore.has(instanceState)) {\r\n            stateStore.delete(instanceState);\r\n        }\r\n    }\r\n}\r\n\r\nfunction getInstanceState(inst) {\r\n    if (!PRIVATE.has(inst)) {\r\n        PRIVATE.set(inst, []);\r\n    }\r\n\r\n    return PRIVATE.get(inst);\r\n}\r\n\r\nfunction callOnDestroyCallback (callback){\r\n    if (\"function\" === typeof callback) {\r\n        callback();\r\n    }\r\n}\r\n\r\nfunction getNewConstructor () {\r\n    function ComposeConstructor(...args) {\r\n        // Called with `new`?\r\n        if (this && this.constructor && this instanceof this.constructor) {\r\n            return this.init(...args);\r\n        }\r\n\r\n        // called directly\r\n        return new ComposeConstructor(...args);\r\n    }\r\n\r\n    ComposeConstructor.prototype.constructor = ComposeConstructor;\r\n    return ComposeConstructor;\r\n}\r\n\r\n/**\r\n * Composes new factory methods from a list of given Objects/Classes.\r\n *\r\n * @class Compose\r\n * @borrows Compose~getDestroyCallback as Compose.getDestroyCallback\r\n *\r\n * @example\r\n *\r\n * var Widget = Compose.create(Model, Events);\r\n *\r\n * myWidget = Widget.create();\r\n *\r\n */\r\nconst Compose = getNewConstructor();\r\nobjectExtend(Compose.prototype, baseMethods);\r\nobjectExtend(Compose, staticMethods);\r\n\r\nexport default Compose;\r\nexport { Compose };\r\n\n\n\n// WEBPACK FOOTER //\n// ./../common-micro-libs/src/jsutils/Compose.js","const OBJECT_TYPE   = \"[object Object]\";\r\nconst _toString     = Function.call.bind(Object.prototype.toString);\r\n\r\n//============================================================\r\n\r\n/**\r\n * Extends an object with the properties of another.\r\n *\r\n * @param {Object|Boolean} mergeIntoObj\r\n *  The object that will have the properties of every other object provided\r\n *  on input merged into. This can also be a `Boolean`, in which case,\r\n *  a deep merge of objects will be done - argument number 2 will\r\n *  become the `mergeIntoObj`.\r\n * @param {...Object} mergeObjects\r\n *\r\n * @return {Object}\r\n */\r\nexport function objectExtend(mergeIntoObj, ...mergeObjects) {\r\n    let response    = mergeIntoObj || {};\r\n    let total       = mergeObjects.length;\r\n    let deepMerge   = false;\r\n    let i;\r\n    let key;\r\n\r\n    if (typeof mergeIntoObj === \"boolean\") {\r\n        deepMerge   = mergeIntoObj;\r\n        response    = mergeObjects.shift() || {};\r\n        total       = mergeObjects.length;\r\n    }\r\n\r\n    for (i = 0; i < total; i++) {\r\n        if (!mergeObjects[i]) {\r\n            continue;\r\n        }\r\n\r\n        for (key in mergeObjects[i]) {\r\n            if (mergeObjects[i].hasOwnProperty(key)){\r\n                if (\r\n                    deepMerge &&\r\n                    _toString(response[key]) === OBJECT_TYPE &&\r\n                    _toString(mergeObjects[i][key]) === OBJECT_TYPE\r\n                ) {\r\n                    response[key] = objectExtend( true, response[key], mergeObjects[i][key]);\r\n                    \r\n                } else {\r\n                    response[key] = mergeObjects[i][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return response;\r\n}\r\nexport default objectExtend;\n\n\n// WEBPACK FOOTER //\n// ./../common-micro-libs/src/jsutils/objectExtend.js","\r\n// Function\r\n    // functionBind(fn, fnParent)\r\nexport const functionBind       = Function.bind.call.bind(Function.bind);\r\n    // functionBindCall(Array.prototype.forEach)\r\nexport const functionBindCall   = functionBind(Function.call.bind, Function.call);\r\n\r\n// Object\r\nexport const objectDefineProperty     = Object.defineProperty;\r\nexport const objectDefineProperties   = Object.defineProperties;\r\nexport const objectKeys               = Object.keys;\r\n\r\n\r\n// Array\r\nconst arr = [];\r\nexport const arrayForEach   = functionBindCall(arr.forEach);\r\nexport const arrayIndexOf   = functionBindCall(arr.indexOf);\r\nexport const arraySplice    = functionBindCall(arr.splice);\n\n\n// WEBPACK FOOTER //\n// ./../common-micro-libs/src/jsutils/runtime-aliases.js","import ObservableArray, { mixin }           from \"./ObservableArray\"\r\nimport ObservableObject, { makeObservable } from \"./ObservableObject\"\r\nimport {\r\n    isPureObject,\r\n    arrayForEach,\r\n    isArray,\r\n    isObservable }  from \"./common\"\r\n\r\n//==================================================================\r\n\r\n/**\r\n * Observes all data - object and arrays - given on input.\r\n *\r\n * @param {...Object|...Array} data\r\n */\r\nexport function observeAll(...data) {\r\n    arrayForEach(data, dataItem => {\r\n        if (isObservable(dataItem)) {\r\n            return;\r\n        }\r\n        if (isPureObject(dataItem)) {\r\n            makeObservable(dataItem, null, true, propValue => {\r\n                if (propValue && isArray(propValue)) {\r\n                    observeAll(propValue);\r\n                }\r\n            });\r\n        }\r\n        else if (isArray(dataItem)) {\r\n            mixin(dataItem);\r\n            observeAll(...dataItem);\r\n        }\r\n    });\r\n}\r\n\r\nexport { ObservableArray, ObservableObject };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import EventEmitter from \"common-micro-libs/src/jsutils/EventEmitter\"\r\nimport nextTick     from \"common-micro-libs/src/jsutils/nextTick\"\r\nimport Set          from \"common-micro-libs/src/jsutils/es6-Set\"\r\n\r\nimport {\r\n    PRIVATE,\r\n    EV_STOP_DEPENDEE_NOTIFICATION,\r\n    OBSERVABLE_FLAG,\r\n    onInternalEvent,\r\n    storeDependeeNotifiers,\r\n    setDependencyTracker,\r\n    unsetDependencyTracker,\r\n    stopDependeeNotifications,\r\n    queueDependeeNotifier,\r\n    isArray,\r\n    bindCallTo,\r\n    setObservableFlag,\r\n    isObservable\r\n} from \"./common\"\r\n\r\n//==============================================================\r\nconst ArrayPrototype    = Array.prototype;\r\nconst objectDefineProp  = Object.defineProperty;\r\nconst objectKeys        = Object.keys;\r\nconst emit              = bindCallTo(EventEmitter.prototype.emit);\r\nconst changeMethods     = ['pop', 'push', 'shift', 'splice', 'unshift', 'sort', 'reverse'];\r\nconst addMethods        = ['push', 'splice', 'unshift'];\r\nconst removeMethods     = ['pop', 'shift', 'splice'];\r\n\r\n/**\r\n * An Array like object with the added ability to listen to events.\r\n * It supports all methods available to a normal array, like `forEach`,\r\n * `some` and `reduce`\r\n *\r\n * @class ObservableArray\r\n *\r\n * @extends EventEmitter\r\n * @extends Array\r\n *\r\n * @fires ObservableArray#change\r\n */\r\nlet ObservableArray = EventEmitter.extend(/** @lends ObservableArray.prototype */{\r\n\r\n    /**\r\n     * The length of the array. Unlike the `length` property, this one is able\r\n     * to notify dependees if any are set to be track dependencies.\r\n     *\r\n     * @name len\r\n     * @type {Number}\r\n     */\r\n\r\n    // For backwards compatible with initial version\r\n    // use `len` property instead\r\n    size: function(){\r\n        storeDependeeNotifiers(getInstance(this).dependees);\r\n        return this.length;\r\n    },\r\n\r\n    /**\r\n     * Returns a member of the collection given an index (zero based),\r\n     * or updates the item at a given index with a new value.\r\n     *\r\n     * @param {Number} index\r\n     * @param {*} [newValue]\r\n     */\r\n    item: function (index){\r\n        let args    = ArrayPrototype.slice.call(arguments, 0);\r\n        let _array  = this;\r\n\r\n        storeDependeeNotifiers(getInstance(this).dependees);\r\n\r\n        // GET mode..\r\n        if (args.length === 1) {\r\n            return _array[index];\r\n        }\r\n\r\n        // Update mode... Emits event\r\n        let events = getNewEventObject();\r\n        if (_array[index] === args[1]) {\r\n            events.updated = [ args[1] ];\r\n        } else {\r\n            events.removed   = [ _array[index] ];\r\n            events.added     = [ args[1] ];\r\n        }\r\n\r\n        let updateResponse = _array[index] = args[1];\r\n        notifyDependees(_array, events);\r\n\r\n        return updateResponse;\r\n    }\r\n});\r\n\r\nfunction getInstance (obArray) {\r\n    if (!PRIVATE.has(obArray)) {\r\n        const dependees = new Set();\r\n        let isQueued = false;\r\n        let nextEvent = null;\r\n        const storeEventData = events => {\r\n            if (!events) {\r\n                return;\r\n            }\r\n\r\n            if (!nextEvent) {\r\n                nextEvent = getNewEventObject();\r\n            }\r\n\r\n            objectKeys(events).forEach(eventName => {\r\n                if (!events[eventName]) {\r\n                    return;\r\n                }\r\n\r\n                if (!nextEvent[eventName]) {\r\n                    nextEvent[eventName] = [];\r\n                }\r\n\r\n                nextEvent[eventName].push(...events[eventName]);\r\n            });\r\n        };\r\n        const inst = {\r\n            dependees: dependees,\r\n\r\n            notify(events) {\r\n                // Queue up calling all dependee notifiers\r\n                dependees.forEach(cb => queueDependeeNotifier(cb));\r\n                storeEventData(events);\r\n\r\n                if (isQueued) {\r\n                    return;\r\n                }\r\n\r\n                isQueued = true;\r\n                nextTick(() => {\r\n                    let eventData = nextEvent;\r\n                    nextEvent = null;\r\n                    /**\r\n                     * ObservableArray was changed.\r\n                     *\r\n                     * @event ObservableArray#change\r\n                     * @type {ObservableArray~ObservableArrayChangeEvent}\r\n                     */\r\n                    emit(obArray, \"change\", eventData);\r\n                    isQueued = false;\r\n                });\r\n            }\r\n        };\r\n\r\n        PRIVATE.set(obArray, inst);\r\n\r\n        const ev1 = onInternalEvent(EV_STOP_DEPENDEE_NOTIFICATION, cb => {\r\n            dependees.delete(cb);\r\n        });\r\n\r\n        if (obArray.onDestroy) {\r\n            obArray.onDestroy(() => {\r\n                dependees.clear();\r\n                ev1.off();\r\n                PRIVATE.delete(obArray);\r\n            });\r\n        }\r\n    }\r\n    return PRIVATE.get(obArray);\r\n}\r\n\r\n/**\r\n * Converts an array instance methods to a wrapped version that can detect changes\r\n * and also track dependee notifiers when data is accessed from the array\r\n *\r\n * @param {Array} arr\r\n *\r\n * @return {Array}\r\n */\r\nfunction makeArrayObservable (arr) {\r\n    // If it looks like this array is already an being observered, then exit.\r\n    if (isObservable(arr)) {\r\n        return;\r\n    }\r\n\r\n    setObservableFlag(arr);\r\n\r\n    const arrCurrentProto = arr.__proto__; // eslint-disable-line\r\n    let newArrProto;\r\n\r\n    // If we already have a wrapped prototype for this array's\r\n    // current prototype, then just use that\r\n    if (PRIVATE.has(arrCurrentProto)) {\r\n        newArrProto = PRIVATE.get(arrCurrentProto); // eslint-disable-line\r\n    }\r\n    // ELSE: create a wrapped prototype for this array's prototype\r\n    else {\r\n        // Create new Array instance prototype\r\n        newArrProto = Object.create(arrCurrentProto);\r\n\r\n        // Add all methods of Array.prototype to the collection\r\n        Object.getOwnPropertyNames(ArrayPrototype).forEach(function(method){\r\n            if (method === \"constructor\" || typeof ArrayPrototype[method] !== \"function\") {\r\n                return;\r\n            }\r\n\r\n            const origMethod    = newArrProto[method];\r\n            const doEvents      = changeMethods.indexOf(method) !== -1;\r\n            const canAdd        = addMethods.indexOf(method)    !== -1;\r\n            const canRemove     = removeMethods.indexOf(method) !== -1;\r\n            const isArraySplice = method === \"splice\";\r\n\r\n            objectDefineProp(newArrProto, method, {\r\n                value: function observable(...args){\r\n                    storeDependeeNotifiers(getInstance(this).dependees);\r\n\r\n                    let response = origMethod.call(this, ...args);\r\n\r\n                    // If the response is an array, then add method to it that allows it\r\n                    // to be converted to an observable\r\n                    if (isArray(response) && response !== this) {\r\n                        objectDefineProp(response, \"toObservable\", {\r\n                            value: () => {\r\n                                if (this.getFactory) {\r\n                                    return this.getFactory().create(response);\r\n                                }\r\n\r\n                                return mixin(response);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    // If Array method can manipulate the array, then emit event\r\n                    if (doEvents) {\r\n                        let events = getNewEventObject();\r\n\r\n                        // Add Events\r\n                        if (canAdd) {\r\n                            if (isArraySplice) {\r\n                                if (args.length > 2) {\r\n                                    events.added = args.slice(2);\r\n                                }\r\n                            }\r\n                            else {\r\n                                events.added = args;\r\n                            }\r\n                        }\r\n\r\n                        if (canRemove) {\r\n                            if (isArraySplice) {\r\n                                events.removed = response;\r\n                            }\r\n                            else {\r\n                                events.removed = [ response ];\r\n                            }\r\n                        }\r\n\r\n                        notifyDependees(this, events);\r\n                    }\r\n\r\n                    return response;\r\n                },\r\n                writable:       true,\r\n                configurable:   true\r\n            });\r\n        });\r\n\r\n        // Add `len` property, which is shorthand for `length` but with added\r\n        // ability to observe for array changes when called and trigger notifiers\r\n        // when changed.\r\n        objectDefineProp(newArrProto, \"len\", {\r\n            get() {\r\n                storeDependeeNotifiers(getInstance(this).dependees);\r\n                return this.length;\r\n            },\r\n\r\n            set(n) {\r\n                const response = this.length = n;\r\n                notifyDependees(this);\r\n                return response;\r\n            },\r\n\r\n            configurable: true\r\n        });\r\n\r\n        PRIVATE.set(arrCurrentProto, newArrProto);\r\n    }\r\n\r\n    arr.__proto__ = newArrProto; // eslint-disable-line\r\n\r\n    return arr;\r\n}\r\n\r\nfunction notifyDependees(arrObj, events) {\r\n    getInstance(arrObj).notify(events);\r\n}\r\n\r\n/**\r\n * Make an array instance observable in place\r\n *\r\n * @param {Array} arr\r\n *\r\n * @return {Array}\r\n */\r\nexport function mixin(arr) {\r\n    if (!isArray(arr)) {\r\n        arr = [];\r\n    }\r\n\r\n    return ObservableArray.create(arr);\r\n}\r\n\r\n// Define the \"create\" factory method that will then redefine each\r\n// our proxyied methods of Array prototype into the array instance\r\nobjectDefineProp(ObservableArray, \"create\", {\r\n    value: function(arrayInstance){\r\n        let observable      = arrayInstance || [];\r\n        let thisPrototype   = this.prototype;\r\n\r\n        if (isObservable(observable)) {\r\n            return observable;\r\n        }\r\n\r\n        makeArrayObservable(observable);\r\n        const observableProto = observable.__proto__; // eslint-disable-line\r\n\r\n        // Copy all methods in this prototype to the Array instance\r\n        for (let prop in thisPrototype){\r\n            /* eslint-disable */\r\n            objectDefineProp(observableProto, prop, {\r\n                value:          thisPrototype[prop],\r\n                writable:       true,\r\n                configurable:   true\r\n            });\r\n            /* eslint-enable */\r\n        }\r\n\r\n        if (observable.init) {\r\n            observable.init.apply(observable, arguments);\r\n        }\r\n\r\n        return observable;\r\n    }\r\n});\r\n\r\nfunction getNewEventObject() {\r\n    /**\r\n     * The array was changed.\r\n     *\r\n     * @typedef {Object} ObservableArray~ObservableArrayChangeEvent\r\n     * @property {Array|null} added\r\n     * @property {Array|null} removed\r\n     * @property {Array|null} updated\r\n     */\r\n    return { added: null, removed: null, updated: null };\r\n}\r\n\r\n\r\nexport default ObservableArray;\r\nexport {\r\n    ObservableArray,\r\n    setDependencyTracker,\r\n    unsetDependencyTracker,\r\n    stopDependeeNotifications\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/ObservableArray.js","import Set from \"./es6-Set\"\r\n\r\n//===============================================\r\nconst callbacks = new Set();\r\nlet queue;\r\n\r\n/**\r\n * Queue a callback to be executed after at the start of next event loop.\r\n * This differs from `nextTick` in that callbacks are not executed during\r\n * micro-processing, but rather on next event loop, so this is not ideal\r\n * for logic that can cause UI reflow.\r\n *\r\n * @param {Function} cb\r\n */\r\nexport function queueCallback(cb) {\r\n    if (\"function\" === typeof cb) {\r\n        callbacks.add(cb);\r\n\r\n        if (!queue) {\r\n            queue = setTimeout(flushQueue, 0);\r\n        }\r\n    }\r\n}\r\nexport default queueCallback;\r\n\r\nfunction flushQueue() {\r\n    const cbList  = [...callbacks];\r\n    callbacks.clear();\r\n    queue = null;\r\n    let cb;\r\n    while (cb = cbList.shift()) {\r\n        cb();\r\n        cb = null;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./../common-micro-libs/src/jsutils/queueCallback.js","import getGlobal from \"./getGlobal\"\r\nimport { FakeIterator } from \"./Iterator\"\r\nimport {\r\n    objectDefineProperties,\r\n    objectDefineProperty,\r\n    arrayIndexOf\r\n} from \"./runtime-aliases\"\r\n\r\n//============================================================\r\n\r\nexport const Set = getGlobal().Set || FakeSet;\r\nexport default Set;\r\n\r\nexport function FakeSet() {\r\n    // FIXME: support for iterable input\r\n}\r\n\r\nobjectDefineProperties(FakeSet.prototype, {\r\n    constructor: { value: FakeSet, configurable: true },\r\n    _: {\r\n        get() {\r\n            const values = [];\r\n            objectDefineProperty(this, \"_\", { value: values });\r\n            return values;\r\n        }\r\n    },\r\n    add: {\r\n        value(item) {\r\n            if (arrayIndexOf(this._, item) === -1) {\r\n                this._.push(item);\r\n            }\r\n            return this;\r\n        }\r\n    },\r\n    has: {\r\n        value(item) { return arrayIndexOf(this._, item) !== -1; }\r\n    },\r\n    size: {\r\n        get() { return this._.length; }\r\n    },\r\n    clear: {\r\n        value() { this._.splice(0); }\r\n    },\r\n    delete: {\r\n        value(item) {\r\n            const idx = arrayIndexOf(this._, item);\r\n            if (idx !== -1) {\r\n                this._.splice(idx, 1);\r\n                return true;\r\n            }\r\n            return false;\r\n        }\r\n    },\r\n    values: {\r\n        value() {\r\n            return new FakeIterator(this._);\r\n        }\r\n    },\r\n    entries: {\r\n        value() {\r\n            return new FakeIterator(this._, this._);\r\n        }\r\n    },\r\n    forEach: {\r\n        value(cb) {\r\n            this._.forEach(item => cb(item, item, this));\r\n        }\r\n    }\r\n});\r\n\n\n\n// WEBPACK FOOTER //\n// ./../common-micro-libs/src/jsutils/Set.js","\r\nexport const GLOBAL = (() => {\r\n    /* global self, window, global */\r\n    if (typeof window !== 'undefined') { return window; }\r\n    if (typeof global !== 'undefined') { return global; }\r\n    if (typeof self !== 'undefined') { return self; }\r\n    return Function('return this;')();\r\n})();\r\n\r\nexport function getGlobal() {\r\n    return GLOBAL;\r\n}\r\nexport default getGlobal;\n\n\n// WEBPACK FOOTER //\n// ./../common-micro-libs/src/jsutils/getGlobal.js","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/global.js","import {\r\n    objectDefineProperty,\r\n    objectDefineProperties\r\n} from \"./runtime-aliases\"\r\n\r\n//-----------------------------------------------------------------------\r\nconst $iterator$ = \"undefined\" !== typeof Symbol && Symbol.iterator ? Symbol.iterator : \"@@iterator\";\r\n\r\n// Great reference: http://2ality.com/2015/02/es6-iteration.html\r\nexport function FakeIterator(keys, values) {\r\n    objectDefineProperty(this, \"_\", { value: {\r\n        keys:   keys.slice(0),\r\n        values: values ? values.slice(0) : null,\r\n        idx:    0,\r\n        total:  keys.length\r\n    } });\r\n}\r\nexport default FakeIterator;\r\n\r\nobjectDefineProperties(FakeIterator.prototype, {\r\n    constructor: { value: FakeIterator },\r\n    next: {\r\n        enumerable: true,\r\n        configurable: true,\r\n        value() {\r\n            const response = {\r\n                done: this._.idx === this._.total\r\n            };\r\n\r\n            if (response.done) {\r\n                response.value = undefined;\r\n                return response;\r\n            }\r\n\r\n            const nextIdx = this._.idx++;\r\n\r\n            response.value = this._.keys[nextIdx];\r\n\r\n            if (this._.values) {\r\n                response.value = [ response.value, this._.values[nextIdx] ];\r\n            }\r\n\r\n            return response;\r\n        }\r\n    }\r\n});\r\nobjectDefineProperty(FakeIterator.prototype, $iterator$, { value(){ return this; } });\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./../common-micro-libs/src/jsutils/Iterator.js","import Compose          from \"common-micro-libs/src/jsutils/Compose\"\r\nimport objectExtend     from \"common-micro-libs/src/jsutils/objectExtend\"\r\nimport EventEmitter     from \"common-micro-libs/src/jsutils/EventEmitter\"\r\nimport nextTick         from \"common-micro-libs/src/jsutils/nextTick\"\r\nimport Set              from \"common-micro-libs/src/jsutils/es6-Set\"\r\n\r\nimport {\r\n    PRIVATE,\r\n    EV_STOP_DEPENDEE_NOTIFICATION,\r\n    IS_COMPUTED_NOTIFIER,\r\n    OBJECT_PROTOTYPE,\r\n    setDependencyTracker,\r\n    unsetDependencyTracker,\r\n    stopDependeeNotifications,\r\n    storeDependeeNotifiers,\r\n    queueDependeeNotifier,\r\n    bindCallTo,\r\n    arrayForEach,\r\n    onInternalEvent,\r\n    isPureObject,\r\n    setObservableFlag\r\n} from \"./common\"\r\n\r\n//=======================================================\r\nconst OBJECT                = Object;\r\n\r\n// aliases\r\nconst objectCreate          = OBJECT.create;\r\nconst objectDefineProperty  = OBJECT.defineProperty;\r\nconst objectHasOwnProperty  = bindCallTo(OBJECT_PROTOTYPE.hasOwnProperty);\r\n\r\nconst objectKeys            = Object.keys;\r\nconst noopEventListener     = objectCreate({ off() {} });\r\n\r\n/**\r\n * Adds the ability to observe `Object` property values for changes.\r\n * Uses an internal `EventEmitter` instance to list and trigger events,\r\n * and `Object.defineProperty` getter/setters to setup watchers on\r\n * property values.\r\n *\r\n * Currently has no support for addition or deletion from the object,\r\n * but with the ES7 forth coming Proxy functionality, that will be\r\n * added.\r\n *\r\n * @class ObservableObject\r\n * @extends Compose\r\n *\r\n * @param {Object} [model]\r\n * @param {Object} [options]\r\n * @param {Boolean} [options.watchAll=true]\r\n *  if `model` was given on input, then all properties will be automatically made watchable.\r\n * @param {Boolean} [options.deep=true]\r\n *  If set to true, the model is walked and all deep objects made observable as well\r\n *\r\n * @example\r\n *\r\n * // Used as a mixin\r\n * var myObj = {\r\n *      first: \"paul\",\r\n *      last: \"tavares\"\r\n * };\r\n *\r\n * ObservableObject.mixin(myObj);\r\n *\r\n * myObj.on(\"first\", function(newValue, oldValue){\r\n *      alert(\"first name was changed\");\r\n * });\r\n *\r\n * @example\r\n *\r\n * // Used as part of a class prototype\r\n * var MyModel = Compose.extend(ObservableObject);\r\n *\r\n * var user = MyModel.create({\r\n *      first: \"paul\",\r\n *      last: \"tavares\"\r\n * });\r\n *\r\n * user.on(\"first\", function(newValue, oldValue){\r\n *  alert(\"first name was change\")\r\n * });\r\n *\r\n */\r\nconst ObservableObject = Compose.extend(/** @lends ObservableObject.prototype */{\r\n    init(model, options) {\r\n        const opt = objectExtend({}, this.getFactory().defaults, options);\r\n\r\n        if (model) {\r\n            // FIXME: need to create prop that uses original getter/setters from `model` - or no?\r\n            objectExtend(this, model);\r\n\r\n            if (opt.watchAll) {\r\n                makeObservable(this, null, opt.deep);\r\n            }\r\n\r\n            getInstance(this).opt = opt;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Add a callback to changes on a given property\r\n     *\r\n     * @param {String|Object} prop\r\n     *  Object property name. If wanting to list to all changes to the object, the\r\n     *  object instance itself can be passed as the prop.\r\n     *\r\n     * @param {Function} callback\r\n     *  A callback function to list to the event. The callback function\r\n     *  can cancel any queued event callbacks by returning `true` (boolean).\r\n     *\r\n     * @return {EventListener}\r\n     *\r\n     * @example\r\n     *\r\n     * obj.on(\"firstName\", () => {});\r\n     *\r\n     * // List to all changes\r\n     * obj.on(obj, () => {});\r\n     */\r\n    on: function(prop, callback){\r\n        return watchProp(this, prop, callback);\r\n    },\r\n\r\n    /**\r\n     * Remove a callback the listening queue of a for a given property name\r\n     *\r\n     * @param {String} prop\r\n     *  Object property name\r\n     *\r\n     * @param {Function} callback\r\n     *  The callback that should be removed.\r\n     */\r\n    off: function(prop, callback){\r\n        unwatchProp(this, prop, callback);\r\n    },\r\n\r\n    /**\r\n     * Add a callback for changes on a given property that is called only once\r\n     *\r\n     * @param {String} prop\r\n     *  Object property name\r\n     *\r\n     * @param {Function} callback\r\n     *  The callback that should be removed.\r\n     */\r\n    once: function(prop, callback){\r\n        return watchPropOnce(this, prop, callback);\r\n    },\r\n\r\n    /**\r\n     * Emit an event and execute any callback listening. Any of the listening\r\n     * events can cancel the calling of queued callbacks by returning `true`\r\n     * (boolean)\r\n     *\r\n     * @param {String} prop\r\n     */\r\n    emit: function(prop){\r\n        return notifyPropWatchers(this, prop);\r\n    },\r\n\r\n    /**\r\n     * Copies the properties of one or more objects into the current observable\r\n     * and makes those properties \"watchable\".\r\n     *\r\n     * @param {...Object} args\r\n     *\r\n     * @returns {Object}\r\n     */\r\n    assign(...args) {\r\n        return observableAssign(this, ...args);\r\n    },\r\n\r\n    /**\r\n     * Sets a property on the observable object and automatically makes it watchable\r\n     *\r\n     * @param {String} propName\r\n     * @param {*} [value]\r\n     * @returns {*}\r\n     */\r\n    setProp(propName, value) {\r\n        makePropWatchable(this, propName);\r\n        return this[propName] = value;\r\n    }\r\n});\r\n\r\n/**\r\n * Returns the private Instance data for this object\r\n *\r\n * @private\r\n * @param {Object} observableObj\r\n *\r\n * @return {EventEmitter}\r\n */\r\nfunction getInstance(observableObj){\r\n    if (!PRIVATE.has(observableObj)) {\r\n        const instData = EventEmitter.create();\r\n        const watched = instData.watched = {};\r\n        let isQueued = false;\r\n\r\n        setObservableFlag(observableObj);\r\n        instData.opt = objectExtend({}, ObservableObject.defaults);\r\n        instData.notify = () => {\r\n            if (isQueued) {\r\n                return;\r\n            }\r\n            isQueued = true;\r\n            nextTick(() => {\r\n                instData.emit(\"\");\r\n                isQueued = false;\r\n            });\r\n        };\r\n\r\n        PRIVATE.set(observableObj, instData);\r\n\r\n        if (observableObj.onDestroy) {\r\n            observableObj.onDestroy(function(){\r\n                objectKeys(watched).forEach(propName => {\r\n                    watched[propName].destroy();\r\n\r\n                    // FIXME remove property getter/setter on the object (if still there)\r\n\r\n                    delete watched[propName];\r\n                });\r\n\r\n                delete instData.watched;\r\n                PRIVATE.delete(observableObj);\r\n                instData.destroy();\r\n            }.bind(observableObj));\r\n        }\r\n    }\r\n    return PRIVATE.get(observableObj);\r\n}\r\n\r\n/**\r\n * A property setup\r\n *\r\n * @private\r\n * @class Observable~PropertySetup\r\n * @extends Compose\r\n */\r\nconst PropertySetup = Compose.extend(/** @lends Observable~PropertySetup.prototype */{\r\n    init(observable, propName) {\r\n        this.dependees = new Set();\r\n        this.propName = propName;\r\n        this._obj = observable;\r\n\r\n        this.onDestroy(() => {\r\n            this.dependees.clear();\r\n            if (this.rmDepEvListener) {\r\n                this.rmDepEvListener.off();\r\n            }\r\n            this._obj = null;\r\n        })\r\n    },\r\n\r\n    propName: \"\",\r\n\r\n    /** @type Array */\r\n    dependees: null,\r\n\r\n    oldVal: null,\r\n\r\n    newVal: null,\r\n\r\n    queued: false,\r\n\r\n    isComputed: false,\r\n\r\n    /**\r\n     * Notifies everyone that is listening for events on this property\r\n     *\r\n     * @param [noDelay=false]\r\n     */\r\n    notify(noDelay){\r\n        const propSetup = this;\r\n\r\n        // Queue up calling all dependee notifiers\r\n        this.dependees.forEach(cb => queueDependeeNotifier(cb));\r\n\r\n        // If emitting of events for this property was already queued, exit\r\n        if (propSetup.queued) {\r\n            return;\r\n        }\r\n\r\n        propSetup.queued = true;\r\n\r\n        if (noDelay) {\r\n            this._emit();\r\n            return;\r\n        }\r\n\r\n        nextTick(() => this._emit());\r\n    },\r\n\r\n    _emit() {\r\n        this.queued = false;\r\n        getInstance(this._obj).emit(this.propName, this.newVal, this.oldVal);\r\n        this.oldVal = null;\r\n    },\r\n\r\n    /**\r\n     * Removes a callback from the list of dependees\r\n     * @param {Function} cb\r\n     */\r\n    removeDependee(cb) {\r\n        this.dependees.delete(cb);\r\n        // Remove listener if no dependees\r\n        if (this.rmDepEvListener && this.dependees.size === 0) {\r\n            this.rmDepEvListener.off();\r\n            this.rmDepEvListener = null;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Stores global dependees into this Property list of dependees\r\n     */\r\n    storeDependees() {\r\n        storeDependeeNotifiers(this.dependees);\r\n\r\n        // If we have dependees, then setup an internal event bus listener\r\n        if (this.dependees.size > 0 && !this.rmDepEvListener) {\r\n            this.rmDepEvListener = onInternalEvent(EV_STOP_DEPENDEE_NOTIFICATION, this.removeDependee.bind(this));\r\n        }\r\n    }\r\n});\r\n\r\n/**\r\n * Checks to see if a given property on this object already has a watcher\r\n * and if not, it sets one up for it.\r\n *\r\n * @private\r\n * @param {ObservableObject} observable\r\n * @param {String} propName\r\n * @param {Function} [valueGetter]\r\n * @param {Function} [valueSetter]\r\n * @param {Boolean} [enumerable=true]\r\n *\r\n * @return {EventEmitter}\r\n */\r\nfunction makePropWatchable(observable, propName, valueGetter, valueSetter, enumerable = true){\r\n    let inst    = getInstance(observable);\r\n    let watched = inst.watched;\r\n\r\n    if (watched[propName]){\r\n        return inst;\r\n    }\r\n\r\n    let currentValue;\r\n    const emitNotification  = !(propName in observable);\r\n    const propDescriptor    = Object.getOwnPropertyDescriptor(observable, propName);\r\n\r\n    if (propDescriptor) {\r\n        if (propDescriptor.configurable === false) {\r\n            // TODO: should we throw()?\r\n            return;\r\n        }\r\n\r\n        valueGetter = valueGetter || propDescriptor.get;\r\n        valueSetter = valueSetter || propDescriptor.set;\r\n\r\n        if (!valueGetter) {\r\n            currentValue = propDescriptor.value;\r\n        }\r\n    }\r\n\r\n    // if we're able to remove the current property (ex. Constants would fail),\r\n    // then change this attribute to be watched\r\n    if (delete observable[propName]) {\r\n        const propSetup = watched[propName] = PropertySetup.create(observable, propName);\r\n\r\n        propSetup.oldVal = propSetup.newVal = currentValue;\r\n\r\n        objectDefineProperty(observable, propName, {\r\n            enumerable,\r\n            configurable:   true,\r\n\r\n            // Getter will either delegate to the prior getter(),\r\n            // or return the value that was originally assigned to the property\r\n            get: function(){\r\n                propSetup.storeDependees();\r\n                return valueGetter ? valueGetter() : propSetup.newVal;\r\n            },\r\n\r\n            // Setter is how we detect changes to the value.\r\n            set: function(newValue){\r\n                if (propSetup.isComputed) {\r\n                    return; // TODO: should throw? or console.warn  ?\r\n                }\r\n\r\n                let oldValue = valueGetter ? valueGetter() : propSetup.newVal;\r\n\r\n                if (valueSetter) {\r\n                    newValue = valueSetter.call(observable, newValue);\r\n\r\n                } else {\r\n                    propSetup.oldVal = oldValue;\r\n                    propSetup.newVal = newValue;\r\n                }\r\n\r\n                // Dirty checking...\r\n                // Only trigger if values are different. Also, only add a trigger\r\n                // if one is not already queued.\r\n                if (newValue !== oldValue) {\r\n                    if (inst.opt.deep && newValue && isPureObject(newValue)) {\r\n                        makeObservable(newValue, null, true);\r\n                    }\r\n\r\n                    propSetup.notify();\r\n                }\r\n            }\r\n        });\r\n\r\n    } else {\r\n        console.log(new Error(\"Unable to watch property [\" + propName + \"] - delete failed\"));\r\n    }\r\n\r\n    if (emitNotification) {\r\n        inst.notify();\r\n    }\r\n\r\n    return inst;\r\n}\r\n\r\n/**\r\n * Created a computed property on a given object\r\n *\r\n * @param {Object} observable\r\n * @param {String} propName\r\n * @param {Function} valueGenerator\r\n * @param {Boolean} [enumerable=true]\r\n */\r\nexport function createComputedProp(observable, propName, valueGenerator, enumerable = true) {\r\n    if (observable && propName && valueGenerator) {\r\n        let runValueGenerator = true;\r\n        let propValue;\r\n        const dependencyChangeNotifier = () => {\r\n            // Trigger the Object property setter(). This does nothing as far as the\r\n            // computed value does, but provides compatibility for any code that\r\n            // might have overwritten the setter in order ot also listen for changes\r\n            // outside of this lib.\r\n            observable[propName] = \"\";\r\n\r\n            // Reset the internally cached prop value and set the flag to run the\r\n            // generator and then notify listeners.\r\n            propValue = null;\r\n            runValueGenerator = true;\r\n            getInstance(observable).watched[propName].notify();\r\n\r\n        };\r\n        const valueGetter = () => {\r\n            // FIXME: should we detect circular loops?\r\n\r\n            if (!runValueGenerator) {\r\n                return propValue;\r\n            }\r\n\r\n            setDependencyTracker(dependencyChangeNotifier);\r\n\r\n            try {\r\n                propValue = valueGenerator.call(observable);\r\n            }\r\n            catch(e) {\r\n                unsetDependencyTracker(dependencyChangeNotifier);\r\n                throw e;\r\n            }\r\n\r\n            unsetDependencyTracker(dependencyChangeNotifier);\r\n            runValueGenerator = false;\r\n            return propValue;\r\n        };\r\n        const valueSetter = () => {\r\n            /* FIXME: should this anything? */\r\n            return propValue;\r\n        };\r\n        const inst = getInstance(observable);\r\n\r\n        dependencyChangeNotifier[IS_COMPUTED_NOTIFIER] = true;\r\n\r\n        // If this propName is already being watched, then first destroy that instance\r\n        if (propName in inst.watched) {\r\n            inst.watched[propName].destroy();\r\n            delete inst.watched[propName];\r\n        }\r\n\r\n        makePropWatchable(observable, propName, valueGetter, valueSetter, enumerable);\r\n\r\n        inst.watched[propName].isComputed = true;\r\n        inst.watched[propName].onDestroy(() => {\r\n            stopDependeeNotifications(dependencyChangeNotifier);\r\n            delete inst.watched[propName];\r\n            delete observable[propName];\r\n            observable[propName] = propValue;\r\n        });\r\n\r\n        return Object.create({\r\n            destroy() {\r\n                if (inst.watched[propName]){\r\n                    inst.watched[propName].destroy(true);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n/**\r\n * Assign the properties of one (or more) objects to the observable and\r\n * makes those properties \"watchable\"\r\n *\r\n * @param {Object} observable\r\n * @param {...Object} objs\r\n *\r\n * @return {Object} observable\r\n */\r\nexport function observableAssign(observable, ...objs) {\r\n    if (objs.length) {\r\n        arrayForEach(objs, obj => {\r\n            arrayForEach(objectKeys(obj), key => {\r\n                makePropWatchable(observable, key);\r\n                observable[key] = obj[key];\r\n            });\r\n        });\r\n    }\r\n    return observable;\r\n}\r\n\r\n/**\r\n * Makes an Object observable or a given property of the object observable.\r\n *\r\n * @param {Object} observable\r\n *  The object that should be made observable.\r\n *\r\n * @param {String} [propName]\r\n *  if left unset, then all existing `own properties` of the object will\r\n *  be made observable.\r\n *\r\n * @param {Boolean} [deep=false]\r\n *  If set to `true` then the object, or the value the given `prop` (if defined)\r\n *  will be \"walked\" and any object found made an observable as well.\r\n *\r\n * @param {Function} [onEach]\r\n *  A callback function to be called as each property is \"walked\". The property value\r\n *  is provided on input to the callback\r\n */\r\nexport function makeObservable(observable, propName, deep, onEach) {\r\n    if (observable) {\r\n        if (propName) {\r\n            makePropWatchable(observable, propName);\r\n        }\r\n        else {\r\n            arrayForEach(objectKeys(observable), prop => makePropWatchable(observable, prop));\r\n        }\r\n\r\n        if (deep) {\r\n            arrayForEach(objectKeys(observable), key => {\r\n                if (observable[key] && isPureObject(observable[key])) {\r\n                    makeObservable(observable[key], null, deep, onEach);\r\n                }\r\n\r\n                if (onEach) {\r\n                    onEach(observable[key]);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Watch a given object property for changes.\r\n *\r\n * @param {Object} observable\r\n * @param {String} propName\r\n *  The `observable` property name or, if wanting to list to all property changes,\r\n *  the actual `observable` instance\r\n * @param {Function} notifier\r\n *\r\n * @returns {EventEmitter#EventListener}\r\n */\r\nexport function watchProp(observable, propName, notifier) {\r\n    const inst = getInstance(observable);\r\n\r\n    if (propName === observable) {\r\n        return inst.on(inst, notifier);\r\n    }\r\n    else if (objectHasOwnProperty(observable, propName)){\r\n        makePropWatchable(observable, propName);\r\n        return inst.on(propName, notifier);\r\n    }\r\n    else {\r\n        return noopEventListener;\r\n    }\r\n}\r\n\r\n/**\r\n * Watch for changes on a given object property only once\r\n * (automatically stops listening after the first invocation).\r\n *\r\n * @param {Object} observable\r\n * @param {String} propName\r\n * @param {Function} notifier\r\n * @returns {EventEmitter#EventListener}\r\n */\r\nexport function watchPropOnce(observable, propName, notifier) {\r\n    const inst = getInstance(observable);\r\n\r\n    if (propName === observable) {\r\n        return inst.once(inst, notifier);\r\n    }\r\n    else if (objectHasOwnProperty(observable, propName)){\r\n        makePropWatchable(observable, propName);\r\n        return inst.once(propName, notifier);\r\n    }\r\n    else {\r\n        return noopEventListener;\r\n    }\r\n}\r\n\r\n/**\r\n * Stop watching an object property.\r\n *\r\n * @param {Object} observable\r\n * @param {String} propName\r\n * @param {Function} notifier\r\n */\r\nexport function unwatchProp(observable, propName, notifier) {\r\n    return getInstance(observable).off(propName, notifier);\r\n}\r\n\r\n\r\n/**\r\n * Notifies watchers of a given Observable property\r\n *\r\n * @param {Object} observable\r\n * @param {String} propName\r\n */\r\nexport function notifyPropWatchers(observable, propName) {\r\n    let watched = getInstance(observable).watched;\r\n    if (watched[propName]) {\r\n        watched[propName].notify(true);\r\n    }\r\n}\r\n\r\n/**\r\n * Adds ObservableObject capabilities to an object.\r\n *\r\n * @method ObservableObject.mixin\r\n *\r\n * @param {Object} observable\r\n *\r\n * @return {Object}\r\n *  Same object that was given on input will be returned\r\n */\r\nexport function observableMixin(observable) {\r\n    if (observable) {\r\n        arrayForEach(objectKeys(ObservableObject.prototype), function(method){\r\n            if (!(method in observable) || observable[method] !== ObservableObject.prototype[method]) {\r\n                objectDefineProperty(observable, method, {\r\n                    value:          ObservableObject.prototype[method],\r\n                    enumerable:     false,\r\n                    configurable:   true\r\n                });\r\n            }\r\n        });\r\n    }\r\n    return observable;\r\n}\r\n\r\nObservableObject.createComputed = createComputedProp;\r\nObservableObject.mixin = observableMixin;\r\n\r\n/**\r\n * Default options to the ObservableObject constructor\r\n *\r\n * @type Object\r\n * @name ObservableObject.defaults\r\n */\r\nObservableObject.defaults = {\r\n    watchAll:   true,\r\n    deep:       true\r\n};\r\n\r\nexport default ObservableObject;\r\nexport {\r\n    ObservableObject,\r\n    setDependencyTracker,\r\n    unsetDependencyTracker,\r\n    stopDependeeNotifications\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/ObservableObject.js"],"sourceRoot":""}